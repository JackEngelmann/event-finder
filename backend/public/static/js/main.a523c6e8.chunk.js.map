{"version":3,"sources":["containers/useDimensions.tsx","containers/useSelectedDate.tsx","containers/useUrlSearchParams.ts","components/ClubList.tsx","components/ClubListItem.tsx","containers/useClubs.tsx","containers/ClubListContainer.tsx","components/EventList.tsx","components/EventCard.tsx","containers/EventListContainer.tsx","components/Calendar.tsx","components/Page.tsx","components/Footer.tsx","containers/FooterContainer.tsx","components/Content.tsx","containers/HomeDesktopContent.tsx","components/SelectedDate.tsx","components/Header.tsx","containers/HomeMobileContent.tsx","pages/HomePage.tsx","components/Icon.tsx","components/GoBackButton.tsx","components/TextWithLineBreaks.tsx","components/KeyValueFields.tsx","components/KeyValueField.tsx","components/H1Title.tsx","components/EventDetails.tsx","components/LoadingIndicator.tsx","containers/useEventWithDetails.tsx","containers/EventDetailsContainer.tsx","pages/EventDetailPage.tsx","components/FormattedHtml.tsx","pages/ImpressumPage.tsx","pages/DataPolicyPage.tsx","pages/Contact.tsx","api.ts","pages/ClubDetailPage.tsx","components/Button.tsx","components/EditableEntity.tsx","pages/AdminPage.tsx","components/LabeledInput.tsx","components/Input.tsx","components/Textarea.tsx","components/Select.tsx","components/Option.tsx","components/EventEditor.tsx","containers/useGenres.tsx","components/Spacer.tsx","pages/AdminAddEventPage.tsx","graphqlUtils.ts","pages/AdminUpdateEventPage.tsx","components/ClubEditor.tsx","pages/AdminAddClubPage.tsx","containers/useClubWithDetails.tsx","pages/AdminUpdateClubPage.tsx","pages/ComponentLibrary.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useDimensions","useState","width","undefined","height","dimensions","setDimensions","useEffect","updateDimensions","window","innerWidth","innerHeight","addEventListener","removeEventListener","useSelectedDate","selectedDate","queryString","moment","selectedDateFromQueryString","URLSearchParams","useLocation","search","get","history","useHistory","pathname","date","push","toISOString","queryStringFromSelectedDate","sortClubsByName","R","cn","ClubList","props","clubs","renderClub","showFirst","showAll","setShowAll","sortedClubs","className","length","displayedClubs","difference","map","onClick","renderContent","ClubListItem","club","divProps","name","CLUBS_QUERY","gql","useClubs","queryResult","useQuery","data","ClubListContainer","key","id","EventList","events","renderEvent","EventCard","event","desktop","classNames","src","imageUrl","alt","EVENTS_QUERY","EventListContainer","onEventClick","eventsQueryResult","variables","eventsQueryFilter","Calendar","setSelectedDate","monthSelection","setMonthSelection","weeksInMonth","year","month","firstDayOfFirstWeek","startOf","daysInWeeks","day","lastDayOfLastWeek","endOf","isMonday","weekday","isAfter","add","getWeeksInMonth","renderDay","isInMonth","isWeekend","includes","isSelected","isSame","subtract","format","weekdaysMin","week","Page","children","Footer","FooterContainer","Content","restrictMaxWidth","scrollable","HomeDesktopContent","showClubList","Boolean","to","SelectedDate","Header","PickDate","HomeMobileContent","displayCalendar","setDisplayCalendar","currentDate","HomePage","commonProps","Icon","icon","restProps","GoBackButton","TextWithLineBreaks","text","lines","split","line","lineIndex","allLines","Fragment","KeyValueFields","KeyValueField","fieldKey","fieldValue","H1Title","EventDetails","priceCategory","join","admissionFee","toFixed","admissionFeeWithDiscount","special","minimumAge","amountOfFloors","toString","genres","g","description","LoadingIndicator","QUERY","EventDetailsContainer","eventId","useEventWithDetails","EventDetailPage","useParams","parseInt","FormattedHtml","ImpressumPage","DataPolicyPage","ContactPage","apolloClient","ApolloClient","CLUB_QUERY","ClubDetailPage","clubId","clubQueryResult","address","region","contact","email","specials","link","Button","primary","secondary","danger","borderless","EditableEntity","onEdit","onDelete","disabled","DELETE_EVENT_MUTATION","DELETE_CLUB_MUTATION","AdminPage","useMutation","deleteEventMutation","deleteClubMutation","c","confirm","refetchQueries","query","e","LabeledInput","label","Input","style","type","Textarea","Select","Option","EventEditor","state","setState","placeholder","value","onChange","target","find","min","parseFloat","step","max","checked","some","g2","filter","useGenres","Spacer","CREATE_EVENT_MUTATION","AdminAddEventPage","eventEditorState","setEventEditorState","input","genreIds","createEventMutation","canCreate","createEvent","a","createEventMutationResult","eventDetailsFragment","EVENT_QUERY","UPDATE_EVENT_MUTATION","AdminUpdateEventPage","eventQueryResult","updateEventMutation","updateEvent","canSave","ClubEditor","CREATE_CLUB_MUTATION","AdminAddClubPage","clubEditorState","setClubEditorState","createClubMutation","createClubMutationResult","createClub","CLUB_WITH_DETAILS_QUERY","UPDATE_CLUB_MUTATION","AdminUpdateClubPage","useClubWithDetails","updateClubMutation","updateClub","ComponentLibraryPage","App","client","path","exact","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4yBAOO,SAASA,IAAiB,IAAD,EACMC,mBAAqB,CAAEC,WAAOC,EAAWC,YAAQD,IADvD,mBACvBE,EADuB,KACXC,EADW,KAkB9B,OAfAC,qBAAU,WACR,SAASC,IACP,IAAMN,EAAQO,OAAOC,WACfN,EAASK,OAAOE,YACtBL,EAAc,CAAEJ,QAAOE,WAMzB,OAHAK,OAAOG,iBAAiB,SAAUJ,GAClCA,IAEO,WACLC,OAAOI,oBAAoB,SAAUL,MAEtC,IAEIH,ECZF,SAASS,IACd,IACMC,EAPR,SAAqCC,GACnC,GAAKA,EACL,OAAOC,IAAOD,GAKOE,CCZd,IAAIC,gBAAgBC,cAAcC,QDYcC,IAAI,SACrDC,EAAUC,cACVC,EAAWL,cAAcK,SAI/B,MAAO,CAACV,EAHgB,SAACW,GACvBH,EAAQI,KAAR,UAAgBF,EAAhB,iBAfJ,SAAqCC,GACnC,OAAOA,EAAKE,cAcuBC,CAA4BH,O,kCEP3DI,EAAkBC,IAASA,IAAO,SAElCC,EAAK,YAEJ,SAASC,EAASC,GAAe,IAC5BC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,WAAYC,EAAcH,EAAdG,UADQ,EAELpC,oBAAS,GAFJ,mBAE5BqC,EAF4B,KAEnBC,EAFmB,KAI7BC,EAAcV,EAAgBK,GA+BpC,OACI,yBAAKM,UAAWT,GACZ,yBAAKS,UAAS,UAAKT,EAAL,aAAd,SACA,yBAAKS,UAAS,UAAKT,EAAL,cAhCtB,WACI,QAAoB7B,IAAhBqC,EAA2B,MAAO,aACtC,GAA2B,IAAvBA,EAAYE,OAAc,MAAO,yBACrC,IAAMC,GACDL,GAAWD,EAAYN,IAAOM,EAAWG,GAAeA,EACvDI,EAAaJ,EAAYE,OAASC,EAAeD,OACvD,OACI,oCACKC,EAAeE,IAAIT,GACnBQ,EAAa,GACV,yBACIH,UAAS,UAAKT,EAAL,cACTc,QAAS,kBAAMP,GAAW,KAF9B,aAIeK,EAJf,KAOHN,GACG,yBACIG,UAAS,UAAKT,EAAL,cACTc,QAAS,kBAAMP,GAAW,KAF9B,cAc2BQ,K,YC9CzCf,G,MAAK,kBAEJ,SAASgB,EAAad,GAAe,IAChCe,EAAsBf,EAAtBe,KAASC,EADsB,YACThB,EADS,UAEvC,OACI,uCAAKO,UAAWT,GAAQkB,GACnBD,EAAKE,M,qLCXX,IAAMC,EAAcC,IAAH,KAejB,SAASC,IACZ,IAAMC,EAAcC,YAAsBJ,GAE1C,MAAO,CADOG,EAAYE,MAAQF,EAAYE,KAAKtB,MACpCoB,GCfZ,SAASG,IACZ,IAAMvB,EAAQmB,IAAW,IAAM,GACzB/B,EAAUC,cAChB,OACI,kBAAC,EAAD,CACIW,MAAOA,EACPC,WAAY,SAAAa,GAAI,OACZ,kBAAC,EAAD,CACIU,IAAKV,EAAKE,KACVF,KAAMA,EACNH,QAAS,kBAAMvB,EAAQI,KAAR,gBAAsBsB,EAAKW,SAGlDvB,UAAW,K,UCXjBL,EAAK,aAEJ,SAAS6B,EAAiB3B,GAAsB,IAC3C4B,EAAwB5B,EAAxB4B,OAAQC,EAAgB7B,EAAhB6B,YAQhB,OAAO,yBAAKtB,UAAWT,QALJ7B,IAAX2D,EAA6B,aACX,IAAlBA,EAAOpB,OAAqB,yBACzBoB,EAAOjB,IAAIkB,I,oCCFpB/B,EAAK,aAEJ,SAASgC,EAAU9B,GAAe,IAAD,EAC5B+B,EAA4B/B,EAA5B+B,MAAOnB,EAAqBZ,EAArBY,QAASoB,EAAYhC,EAAZgC,QACxB,OACI,yBACIzB,UAAW0B,IAAWnC,GAAD,6BACbA,EADa,aACGkC,GADH,wBAEblC,EAFa,aAEGkC,GAFH,IAIrBpB,QAASA,GAET,yBAAKL,UAAS,UAAKT,EAAL,sBACV,yBACIS,UAAS,UAAKT,EAAL,aACToC,IAAK,KAAOH,EAAMI,SAClBC,IAAG,gBAAWL,EAAMd,SAG5B,yBAAKV,UAAS,UAAKT,EAAL,kBACV,yBAAKS,UAAS,UAAKT,EAAL,WAAkBiC,EAAMd,MACtC,yBAAKV,UAAS,UAAKT,EAAL,gBAAuBiC,EAAMhB,KAAKE,Q,sSCrBhE,IAAMoB,EAAelB,IAAH,KAkBX,SAASmB,EAAmBtC,GAAe,IACxCnB,EAAwCmB,EAAxCnB,aAAcmD,EAA0BhC,EAA1BgC,QAASO,EAAiBvC,EAAjBuC,aACzBC,EAAoBlB,YAA0Be,EAAc,CAChEI,UAAW,CACTC,kBAAmB,CACjBlD,KAAMX,GAAgBA,EAAaa,kBAInCkC,EAAUY,EAAkBjB,MAAQiB,EAAkBjB,KAAKK,QAAW,GAC5E,OACI,kBAAC,EAAD,CACEA,OAAQA,EACRC,YAAa,SAAAE,GAAK,OAChB,kBAAC,EAAD,CACEC,QAASA,EACTP,IAAKM,EAAML,GACXK,MAAOA,EACPnB,QAAS,kBAAM2B,EAAa,CAAEb,GAAIK,EAAML,W,YCrC9C5B,G,MAAK,YAEJ,SAAS6C,EAAS3C,GAAe,IAEhC4C,EAIA5C,EAJA4C,gBACA/D,EAGAmB,EAHAnB,aACAgE,EAEA7C,EAFA6C,eACAC,EACA9C,EADA8C,kBAEEC,EAoFV,SAAyBC,EAAcC,GACnC,IAAMC,EAAsBnE,MACvBiE,KAAKA,GACLC,MAAMA,GACNE,QAAQ,SACRA,QAAQ,QACPC,EAA0B,GAC5BC,EAActE,IAAOmE,GACnBI,EAAoBvE,MACrBiE,KAAKA,GACLC,MAAMA,GACNM,MAAM,SACNA,MAAM,QACX,OAAa,CACT,IAAMC,EAA6B,IAAlBH,EAAII,UACrB,GAAIJ,EAAIK,QAAQJ,GAAoB,MACpC,GAAIE,EACAJ,EAAY3D,KAAK,CAAC4D,SAEDD,EAAYA,EAAY5C,OAAS,GACzCf,KAAK4D,GAElBA,EAAMtE,IAAOsE,GAAKM,IAAI,EAAG,OAE7B,OAAOP,EA5GcQ,CACjBf,EAAeG,OACfH,EAAeI,SA0CnB,SAASY,EAAUR,GAAc,IAAD,EACtBS,EAAYT,EAAIJ,UAAYJ,EAAeI,QAC3Cc,EAAY,CAAC,EAAG,GAAGC,SAASX,EAAII,WAChCQ,EAAapF,GAAgBA,EAAaqF,OAAOb,EAAK,OAC5D,OACI,yBACI5B,IAAK4B,EAAI3D,cACTa,UAAW0B,IAAW,GAAD,OAAInC,EAAJ,wCACbA,EADa,mBACSiE,GADT,wBAEbjE,EAFa,oBAEUmE,GAFV,IAIrBrD,QAAS,kBAAMgC,EAAgBS,KAE9BS,GAAaT,EAAI7D,QAkB9B,OACI,yBAAKe,UAAS,UAAKT,EAAL,cArEV,yBAAKS,UAAS,UAAKT,EAAL,aACV,yBACIS,UAAS,UAAKT,EAAL,oBACTc,QAAS,kBACLkC,EACI/D,IAAO8D,GAAgBsB,SAAS,EAAG,YAJ/C,UAUA,6BAAMtB,EAAeuB,OAAO,cAC5B,yBACI7D,UAAS,UAAKT,EAAL,oBACTc,QAAS,kBACLkC,EACI/D,IAAO8D,GAAgBc,IAAI,EAAG,YAJ1C,WAkDJ,yBAAKpD,UAAS,UAAKT,EAAL,kBACTD,KAPa,SAAC4D,GAAD,OAClB,yBAAKlD,UAAS,UAAKT,EAAL,aAAoB2B,IAAKgC,GAClCY,wBAAcZ,MAKS,IAS3BV,EAAapC,KA9CtB,SAAoB2D,GAChB,OACI,yBACI/D,UAAS,UAAKT,EAAL,UACT2B,IAAK,aAAe6C,EAAK,GAAG5E,eAE3B4E,EAAK3D,IAAIkD,Q,gBCvDpB/D,EAAK,OAEJ,SAASyE,EAAKvE,GAAe,IACxBwE,EAA0BxE,EAA1BwE,SAAaxD,EADU,YACGhB,EADH,cAE/B,OACI,yCACQgB,EADR,CAEIT,UAAW0B,IAAWnC,EAAIE,EAAMO,aAE/BiE,G,gBCRP1E,EAAK,SAEJ,SAAS2E,EAAOzE,GACnB,OACI,4BAAQO,UAAWT,GACf,yBAAKS,UAAS,UAAKT,EAAL,cAAqBE,EAAMwE,WCR9C,SAASE,IACZ,IAAMrF,EAAUC,cAChB,OACI,kBAAC,EAAD,KACI,4BAAQsB,QAAS,kBAAMvB,EAAQI,KAAK,gBAApC,aACA,4BAAQmB,QAAS,kBAAMvB,EAAQI,KAAK,kBAApC,eACA,4BAAQmB,QAAS,kBAAMvB,EAAQI,KAAK,cAApC,YCAZ,IAAMK,EAAK,UAEJ,SAAS6E,EAAQ3E,GAAe,IAC3B4E,EAAwD5E,EAAxD4E,iBAAkBC,EAAsC7E,EAAtC6E,WAAYL,EAA0BxE,EAA1BwE,SAAaxD,EADjB,YAC8BhB,EAD9B,8CAElC,OACI,uCACIO,UAAW0B,IAAWnC,EAAI+E,GAAU,UAAO/E,EAAP,kBAChCkB,GAEH4D,EACG,yBAAKrE,UAAS,UAAKT,EAAL,yBACV,yBAAKS,UAAS,UAAKT,EAAL,wBACT0E,GAEL,kBAACE,EAAD,OAGJ,yBAAKnE,UAAS,UAAKT,EAAL,yBACT0E,EACD,kBAACE,EAAD,QCRpB,IAEM5E,EAAK,uBAEJ,SAASgF,EAAmB9E,GAAe,IACtC6C,EAAsC7C,EAAtC6C,eAAgBC,EAAsB9C,EAAtB8C,kBAClB3E,EAAaL,IACbiH,EAAeC,SAAS7G,EAAWH,OAASG,EAAWH,MAAQ,KAHxB,EAILY,IAJK,mBAItCC,EAJsC,KAIxB+D,EAJwB,KAKvCzD,EAASD,cAAcC,OACvBE,EAAUC,cAChB,IAAKT,EACD,OAAO,kBAAC,IAAD,CAAUoG,GAAE,iBAAYlG,MAASW,iBAG5C,OACI,kBAAC,EAAD,CAAMa,UAAWT,GACb,yBAAKS,UAAS,UAAKT,EAAL,YAAd,aACejB,EAAauF,OAAO,YAEnC,yBAAK7D,UAAS,UAAKT,EAAL,sBACV,yBAAKS,UAAS,UAAKT,EAAL,uBACV,kBAAC,EAAD,CACI+C,eAAgBA,EAChBC,kBAAmBA,EACnBjE,aAAcA,EACd+D,gBAAiBA,MAI7B,kBAAC,EAAD,CAASiC,YAAU,EAACD,kBAAgB,GAC/BG,GACG,yBAAKxE,UAAS,UAAKT,EAAL,wBACV,kBAAC0B,EAAD,OAGR,yBAAKjB,UAAS,UAAKT,EAAL,yBACV,kBAACwC,EAAD,CACIzD,aAAcA,EACdmD,SAAO,EACPO,aA3BC,SAACR,GAAD,OACjB1C,EAAQI,KAAR,iBAAuBsC,EAAML,IAA7B,OAAkCvC,U,gBC5BpCW,EAAK,gBAEJ,SAASoF,GAAalF,GAAe,IAChCR,EAAsBQ,EAAtBR,KAASwB,EADsB,YACThB,EADS,UAEvC,OACE,uCAAKO,UAAW0B,IAAWnC,EAAIE,EAAMY,SAAN,UAAoBd,EAApB,iBAA0CkB,GACtExB,EAAK4E,OAAO,Y,UCNftE,GAAK,SAEJ,SAASqF,GAAOnF,GACnB,OACI,yBAAKO,UAAWT,IACZ,yBAAKS,UAAS,UAAKT,GAAL,cACTE,EAAMwE,WCKvB,IAAMY,GAAW,kBAAM,8CAEjBtF,GAAK,sBAEJ,SAASuF,GAAkBrF,GAAe,IACrC6C,EAAsC7C,EAAtC6C,eAAgBC,EAAsB9C,EAAtB8C,kBADoB,EAEJlE,IAFI,mBAErCC,EAFqC,KAEvB+D,EAFuB,OAGE7E,oBAAUc,GAHZ,mBAGrCyG,EAHqC,KAGpBC,EAHoB,KAItClG,EAAUC,cACVH,EAASD,cAAcC,OAC7B,IAAKN,EACD,OAAO,kBAAC,IAAD,CAAUoG,GAAE,iBAAYlG,MAASW,iBAG5C,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,KACKb,EACG,kBAAC,GAAD,CACIW,KAAMX,EACN+B,QAAS,kBACL2E,GACI,SAAAD,GAAe,OAAKA,QAKhC,kBAAC,GAAD,OAGR,yBACI/E,UAAW0B,IAAW,GAAD,OAAInC,GAAJ,+CACbA,GADa,+BACqBwF,KAG1C,kBAAC,EAAD,CACIzC,eAAgBA,EAChBC,kBAAmBA,EACnBjE,aAAcA,EACd+D,gBAAiB,SAAA/D,GACb+D,EAAgB/D,GAChB0G,GAAmB,OAI/B,kBAAC,EAAD,CAASV,YAAU,GACf,kBAACvC,EAAD,CACIzD,aAAcA,EACd0D,aApCK,SAACR,GAAD,OACjB1C,EAAQI,KAAR,iBAAuBsC,EAAML,IAA7B,OAAkCvC,SCvB1C,IAAMqG,GAAczG,MAEb,SAAS0G,GAASzF,GACvB,IAAM7B,EAAaL,IADkB,EAEOC,mBAASyH,IAFhB,mBAI/BE,EAAc,CAAE7C,eAJe,KAICC,kBAJD,MAKrC,OAFgBkC,QAAQ7G,EAAWH,OAASG,EAAWH,MAAQ,KAE9C,kBAAC,EAAuB0H,GAAkB,kBAAC,GAAsBA,G,MCV7E,SAASC,GAAK3F,GAAe,IACxB4F,EAAuB5F,EAAvB4F,KAASC,EADc,YACA7F,EADA,UAE/B,OAAO,qCAAGO,UAAW0B,IAAW,UAAD,OAAW2D,KAAaC,ICD3D,IAAM/F,GAAK,iBAEJ,SAASgG,GAAa9F,GACzB,OACI,0CAAQO,UAAWT,IAAQE,GACvB,kBAAC2F,GAAD,CAAMC,KAAK,gB,MCNhB,SAASG,GAAmB/F,GAAe,IACtCgG,EAAShG,EAATgG,KAER,IAAKA,EAAM,OAAO,KAElB,IAAMC,EAAQD,EAAKE,MAAM,MAazB,OAAO,oCAAGD,EAAMtF,KAXhB,SAAoBwF,EAAcC,EAAmBC,GAEjD,OADmBD,IAAcC,EAAS7F,OAAS,EAC5B,0BAAMiB,IAAK2E,GAAYD,GAE1C,kBAAC,IAAMG,SAAP,CAAgB7E,IAAK2E,GACjB,8BAAOD,GACP,kC,UCZVrG,GAAK,mBAEJ,SAASyG,GAAevG,GAAe,IAClCwE,EAA0BxE,EAA1BwE,SAAaxD,EADoB,YACPhB,EADO,cAEzC,OACI,uCAAKO,UAAWT,IAAQkB,GACnBwD,G,UCJP1E,GAAK,kBAEJ,SAAS0G,GAAcxG,GAAe,IACjCyG,EAAyBzG,EAAzByG,SAAUC,EAAe1G,EAAf0G,WAClB,OAAKA,EAED,yBAAKnG,UAAWT,IACZ,yBAAKS,UAAS,UAAKT,GAAL,YAAmB4G,GACjC,yBAAKnG,UAAS,UAAKT,GAAL,UAAiB2G,IAJf,K,UCLtB3G,GAAK,WAEJ,SAAS6G,GAAQ3G,GACpB,OACI,yBAAKO,UAAWT,IACZ,4BAAKE,EAAMwE,UACX,yBAAKjE,UAAS,UAAKT,GAAL,gBCC1B,IAAMA,GAAK,gBAEJ,SAAS8G,GAAa5G,GAAe,IAChC+B,EAAU/B,EAAV+B,MACR,OACI,yBAAKxB,UAAWT,IACZ,yBAAKS,UAAS,UAAKT,GAAL,cACV,kBAAC,GAAD,KAAUiC,EAAMd,MAChB,yBAAKV,UAAS,UAAKT,GAAL,6BACV,yBAAKS,UAAS,UAAKT,GAAL,sBACV,yBACIS,UAAS,UAAKT,GAAL,aACToC,IAAK,KAAOH,EAAMI,SAClBC,IAAI,WAGZ,kBAAC,GAAD,KACI,kBAAC,GAAD,CACIqE,SAAS,OACTC,WAAY3E,EAAMhB,KAAKE,OAE3B,kBAAC,GAAD,CACIwF,SAAS,iBACTC,WACI3E,EAAM8E,cACAhH,KACI,iBAAM,WACNkC,EAAM8E,eACRC,KAAK,IACP,KAGd,kBAAC,GAAD,CACIL,SAAS,gBAETC,WACI3E,EAAMgF,aACAhF,EAAMgF,aAAaC,QAAQ,GAAK,cAChC/I,IAGd,kBAAC,GAAD,CACIwI,SAAS,8BAETC,WACI3E,EAAMkF,yBACAlF,EAAMkF,yBAAyBD,QAC3B,GACA,cACJ/I,IAGd,kBAAC,GAAD,CACIwI,SAAS,UACTC,WAAY3E,EAAMmF,UAEtB,kBAAC,GAAD,CACIT,SAAS,cACTC,WACI3E,EAAMoF,WACApF,EAAMoF,WAAa,SACnBlJ,IAGd,kBAAC,GAAD,CACIwI,SAAS,mBACTC,WACI3E,EAAMqF,eACArF,EAAMqF,eAAeC,gBACrBpJ,IAGd,kBAAC,GAAD,CACIwI,SAAS,SACTC,WACI3E,EAAMuF,OACAvF,EAAMuF,OAAO3G,KAAI,SAAA4G,GAAC,OAAIA,EAAEtG,QAAM6F,KAAK,WACnC7I,MAKtB,iCACI,kBAAC8H,GAAD,CAAoBC,KAAMjE,EAAMyF,iBC/F7C,SAASC,KACZ,OAAO,2C,qkBCCX,IAAMC,GAAQvG,IAAH,MCKJ,SAASwG,GAAsB3H,GAAe,IACzC4H,EAAY5H,EAAZ4H,QACF7F,EDyCH,SAA6B6F,GAChC,IAAMvG,EAAcC,YAAoBoG,GAAO,CAC3CjF,UAAW,CAAEmF,QAASA,KAG1B,MAAO,CADOvG,EAAYE,MAAQF,EAAYE,KAAKQ,MACpCV,GC9CDwG,CAAoBD,GAAU,GAC5C,OAAKA,OACS3J,IAAV8D,EAA4B,kBAAC0F,GAAD,MACzB,kBAAC,GAAD,CAAc1F,MAAOA,IAFP,KCIlB,SAAS+F,GAAgB9H,GAC5B,IACQ4H,EADOG,cACPH,QACFvI,EAAUC,cACVH,EAASD,cAAcC,OAE7B,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAcyB,QAAS,kBAAMvB,EAAQI,KAAR,WAAiBN,QAElD,kBAAC,EAAD,CAASyF,kBAAgB,EAACC,YAAU,GAChC,kBAAC8C,GAAD,CACIC,QAASA,EAAUI,SAASJ,EAAS,SAAM3J,M,UCxBzD6B,GAAK,iBAEJ,SAASmI,GAAcjI,GAC1B,OACI,yBAAKO,UAAWT,IACXE,EAAMwE,UCAZ,SAAS0D,KACZ,IAAM7I,EAAUC,cAChB,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAcsB,QAAS,kBAAMvB,EAAQI,KAAK,SAE9C,kBAAC,EAAD,CAASmF,kBAAgB,EAACC,YAAU,GAChC,kBAAC,GAAD,kBAGA,kBAAC,GAAD,uCAC0B,6BAAM,6BADhC,eAEgB,6BAFhB,cAGe,6BAHf,gBAIiB,6BACb,gDALJ,eAMgB,6BANhB,WAOY,6BAPZ,wBAQyB,6BARzB,6BAS8B,6BAC1B,0FAVJ,eAWgB,6BAXhB,cAYe,6BAZf,gBAaiB,6BACb,mDACA,sDAfJ,86BAiBI,oDAjBJ,otBAmBI,4CAnBJ,2yBAqBI,2CArBJ,69BAyBI,gDAzBJ,09CA2BI,8CA3BJ,mgEA6BI,2CA7BJ,g3BCXT,SAASsD,KACZ,IAAM9I,EAAUC,cAChB,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAcsB,QAAS,kBAAMvB,EAAQI,KAAK,SAE9C,kBAAC,EAAD,CAASmF,kBAAgB,EAACC,YAAU,GAChC,kBAAC,GAAD,oBACA,kBAAC,GAAD,KACI,8DACA,mDAFJ,mYAUI,kEACA,oGAXJ,yJAkBI,4DAlBJ,0bA2BI,+DA3BJ,mLA+BI,iFA/BJ,mvBA6CI,+EACA,2CA9CJ,kzBA8DI,mEA9DJ,kFAiEI,6BAjEJ,eAmEI,6BAnEJ,cAoEe,6BApEf,gBAsEI,6BAtEJ,kCAwEI,6BAxEJ,6BA0EI,6BACA,6BA3EJ,6OAgFI,iFAhFJ,+vDAgHI,0FAhHJ,oXAyHI,iEAzHJ,6XAiII,gEAjIJ,0jBA4II,gFA5IJ,2cAqJI,2EArJJ,myDAsLI,qEAtLJ,muCA6MI,6CACA,+CA9MJ,ovCAqOI,oDArOJ,MAuOI,6BACA,6BAxOJ,0BCVT,SAASuD,KACZ,IAAM/I,EAAUC,cAChB,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAcsB,QAAS,kBAAMvB,EAAQI,KAAK,SAE9C,kBAAC,EAAD,CAASmF,kBAAgB,EAACC,YAAU,GAChC,kBAAC,GAAD,gBADJ,Q,aCmBCwD,GAAe,I,MAAIC,G,kVCdhC,IAAMC,GAAapH,IAAH,MA8BT,SAASqH,GAAexI,GAC3B,IACQyI,EADOV,cACPU,OACFC,EAAkBpH,YAAwBiH,GAAY,CACxD9F,UAAW,CAAEgG,OAAQT,SAASS,EAAQ,OAEpCpJ,EAAUC,cACVyB,EAAO2H,EAAgBnH,MAAQmH,EAAgBnH,KAAKR,KAE1D,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAcH,QAAS,kBAAMvB,EAAQI,KAAK,SAE9C,kBAAC,EAAD,CAASmF,kBAAgB,EAACC,YAAU,GAC/B9D,EACG,oCACI,kBAAC,GAAD,KAAUA,EAAKE,MACf,kBAAC,GAAD,KACI,kBAAC,GAAD,CACIwF,SAAS,SACTC,WAAY3F,EAAK4H,UAErB,kBAAC,GAAD,CACIlC,SAAS,SACTC,WAAY3F,EAAK6H,SAErB,kBAAC,GAAD,CACInC,SAAS,UACTC,WAAY3F,EAAK8H,UAErB,kBAAC,GAAD,CACIpC,SAAS,QACTC,WAAY3F,EAAK+H,QAErB,kBAAC,GAAD,CACIrC,SAAS,WACTC,WAAY3F,EAAKgI,WAErB,kBAAC,GAAD,CACItC,SAAS,OACTC,WAAY3F,EAAKiI,QAGzB,kBAAC,GAAD,KAAgBjI,EAAKyG,cAGzB,e,sBCtFd1H,GAAK,SAEJ,SAASmJ,GAAOjJ,GAAe,IAAD,EAE7BO,EAMAP,EANAO,UACA2I,EAKAlJ,EALAkJ,QACAC,EAIAnJ,EAJAmJ,UACAC,EAGApJ,EAHAoJ,OACAC,EAEArJ,EAFAqJ,WACGxD,EAP0B,YAQ7B7F,EAR6B,2DASjC,OACI,4CACQ6F,EADR,CAEItF,UAAW0B,IAAWnC,GAAIS,GAAL,6BACbT,GADa,aACGoJ,GADH,wBAEbpJ,GAFa,eAEKqJ,GAFL,wBAGbrJ,GAHa,YAGEsJ,GAHF,wBAIbtJ,GAJa,gBAIMuJ,GAJN,OCfjC,IAAMvJ,GAAK,kBAEJ,SAASwJ,GAAetJ,GAAe,IAClCuJ,EAA+BvJ,EAA/BuJ,OAAQC,EAAuBxJ,EAAvBwJ,SAAUhF,EAAaxE,EAAbwE,SAC1B,OACI,yBAAKjE,UAAWT,IACZ,yBAAKS,UAAS,UAAKT,GAAL,qBACV,kBAAC,GAAD,CAAQc,QAAS2I,EAAQE,UAAWF,EAAQJ,WAAS,GACjD,kBAACxD,GAAD,CAAMC,KAAK,SAEf,kBAAC,GAAD,CAAQhF,QAAS4I,EAAUC,UAAWD,EAAUJ,QAAM,GAClD,kBAACzD,GAAD,CAAMC,KAAK,gBAGnB,yBAAKrF,UAAS,UAAKT,GAAL,kBAAyB0E,I,yhBCTnD,IAAM1E,GAAK,aAILuC,GAAelB,IAAH,MASZuI,GAAwBvI,IAAH,MAQrBwI,GAAuBxI,IAAH,MAQnB,SAASyI,KACZ,IAAM3J,EAAQJ,IAASA,IAAO,QAASuB,IAAW,IAAM,IAClDoB,EAAoBlB,YAA8Be,IAClDT,EACFY,EAAkBjB,MAClB1B,IAASA,IAAO,QAAS2C,EAAkBjB,KAAKK,QAL5B,EAMMiI,YAAYH,IAAnCI,EANiB,sBAOKD,YAAYF,IAAlCI,EAPiB,oBAQlB1K,EAAUC,cAoBhB,OACI,kBAAC,EAAD,KACI,yBAAKiB,UAAWT,IACZ,kBAAC,GAAD,uBACA,yBAAKS,UAAS,UAAKT,GAAL,cACV,yBAAKS,UAAS,UAAKT,GAAL,aACV,yBAAKS,UAAS,UAAKT,GAAL,oBACV,qCACA,kBAAC,GAAD,CACIuJ,YAAU,EACVF,WAAS,EACTvI,QAAS,kBAAMvB,EAAQI,KAAK,qBAE5B,kBAACkG,GAAD,CAAMC,KAAK,WAGnB,yBAAKrF,UAAS,UAAKT,GAAL,qBACTG,EACGA,EAAMU,KAAI,SAAAqJ,GAAC,OACP,kBAAC,GAAD,CACIvI,IAAKuI,EAAEtI,GACP8H,SAAU,kBA9B1B9H,EA8B2CsI,EAAEtI,QA7B9CnD,OAAO0L,QAAQ,UAE9BF,EAAmB,CACftH,UAAW,CAAEf,MACbwI,eAAgB,CAAC,CAAEC,MAAOjJ,OALlC,IAAoBQ,GA+BgB6H,OAAQ,kBACJlK,EAAQI,KAAR,sBAA4BuK,EAAEtI,OAGjCsI,EAAE/I,SAIX,kBAACwG,GAAD,QAIZ,yBAAKlH,UAAS,UAAKT,GAAL,aACV,yBAAKS,UAAS,UAAKT,GAAL,oBACV,sCACA,kBAAC,GAAD,CACIc,QAAS,kBAAMvB,EAAQI,KAAK,qBAC5B0J,WAAS,EACTE,YAAU,GAEV,kBAAC1D,GAAD,CAAMC,KAAK,WAGnB,yBAAKrF,UAAS,UAAKT,GAAL,qBACT8B,EACGA,EAAOjB,KAAI,SAAAyJ,GAAC,OACR,kBAAC,GAAD,CACI3I,IAAK2I,EAAE1I,GACP8H,SAAU,kBApEzB9H,EAoE2C0I,EAAE1I,QAnE/CnD,OAAO0L,QAAQ,UAE9BH,EAAoB,CAChBrH,UAAW,CAAEf,MACbwI,eAAgB,CAAC,CAAEC,MAAO9H,QALlC,IAAqBX,GAqEe6H,OAAQ,kBACJlK,EAAQI,KAAR,uBAA6B2K,EAAE1I,OAGlC0I,EAAEnJ,SAIX,kBAACwG,GAAD,W,0CC3H1B3H,I,YAAK,iBAEJ,SAASuK,GAAarK,GAAe,IAChCsK,EAAoBtK,EAApBsK,MAAO9F,EAAaxE,EAAbwE,SACf,OACI,yBAAKjE,UAAWT,IACZ,+BAAQwK,GACP9F,G,mkBCVb,IAAM1E,GAAK,QAEJ,SAASyK,GAAMvK,GAAe,IACzBwK,EAAyExK,EAAzEwK,MAAOjK,EAAkEP,EAAlEO,UADiB,EACiDP,EAAvDhC,aADM,MACiB,aAAfgC,EAAMyK,KAAsB,MAAQ,OADtC,EAEhC,OACI,2CACQzK,EADR,CAEIO,UAAW0B,IAAWnC,GAAIS,GAC1BiK,MAAK,MAAOA,EAAP,CAAcxM,a,mkBCR/B,IAAM8B,GAAK,WAEJ,SAAS4K,GAAS1K,GAAe,IAC5BO,EAA4BP,EAA5BO,UAAWvC,EAAiBgC,EAAjBhC,MAAOwM,EAAUxK,EAAVwK,MAC1B,OACI,8CACQxK,EADR,CAEIO,UAAW0B,IAAWnC,GAAIS,GAC1BiK,MAAK,MAAOA,EAAP,CAAcxM,a,mkBCP/B,IAAM8B,GAAK,SAEJ,SAAS6K,GAAO3K,GAAe,IAC1BO,EAAqCP,EAArCO,UADyB,EACYP,EAA1BhC,aADc,MACN,OADM,EACEwM,EAAUxK,EAAVwK,MACnC,OACI,4CACQxK,EADR,CAEIO,UAAW0B,IAAWnC,GAAIS,GAC1BiK,MAAK,MAAOA,EAAP,CAAcxM,a,UCTzB8B,GAAK,SAEJ,SAAS8K,GAAO5K,GAAe,IAC1BO,EAAcP,EAAdO,UACR,OACI,4CAAYP,EAAZ,CAAmBO,UAAW0B,IAAWnC,GAAIS,M,6jBCqCrD,IAAMT,GAAK,eAEJ,SAAS+K,GAAY7K,GAAe,IAEnC8K,EAMA9K,EANA8K,MACAC,EAKA/K,EALA+K,SACAlI,EAIA7C,EAJA6C,eACA5C,EAGAD,EAHAC,MACAqH,EAEAtH,EAFAsH,OACAxE,EACA9C,EADA8C,kBAEJ,OACI,yBAAKvC,UAAWT,IACZ,kBAAC,GAAD,CAAcwK,MAAM,QAChB,kBAAC,GAAD,CACIU,YAAY,OACZC,MAAOH,EAAM7J,MAAQ,GACrBiK,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJ7J,KAAMmJ,EAAEe,OAAOF,aAK/B,kBAAC,GAAD,CAAcX,MAAM,QAChB,yBAAK/J,UAAS,UAAKT,GAAL,uBACV,kBAAC,EAAD,CACI+C,eAAgBA,EAChBC,kBAAmBA,EACnBjE,aACIiM,EAAMtL,KAAOT,IAAO+L,EAAMtL,WAAQvB,EAEtC2E,gBAAiB,SAAApD,GAAI,OACjBuL,EAAS,MACFD,EADC,CAEJtL,KAAMA,EAAKE,sBAM/B,kBAAC,GAAD,CAAc4K,MAAM,QAChB,kBAAC,GAAD,CACIW,MAAOH,EAAM/J,KAAO+J,EAAM/J,KAAKW,GAAK,GACpCwJ,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJ/J,KAAMd,EAAMmL,MACR,SAAApB,GAAC,OAAIA,EAAEtI,KAAOsG,SAASoC,EAAEe,OAAOF,MAAO,YAKnD,kBAAC,GAAD,CAAQxB,UAAQ,EAACwB,MAAM,IAAvB,cAGChL,EAAMU,KAAI,SAAAqJ,GAAC,OACR,kBAAC,GAAD,CAAQiB,MAAOjB,EAAEtI,IAAKsI,EAAE/I,WAIpC,kBAAC,GAAD,CAAcqJ,MAAM,iBAChB,kBAAC,GAAD,CACIW,MAAOH,EAAM/D,cAAgB,GAC7BsE,IAAK,EACLZ,KAAK,SACLS,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJ/D,aAAcuE,WAAWlB,EAAEe,OAAOF,WAG1CM,KAAM,OAGd,kBAAC,GAAD,CAAcjB,MAAM,+BAChB,kBAAC,GAAD,CACIW,MAAOH,EAAM7D,0BAA4B,GACzCoE,IAAK,EACLZ,KAAK,SACLS,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJ7D,yBAA0BqE,WACtBlB,EAAEe,OAAOF,WAIrBM,KAAM,OAGd,kBAAC,GAAD,CAAcjB,MAAM,oBAChB,kBAAC,GAAD,CACIW,MAAOH,EAAM1D,gBAAkB,GAC/BiE,IAAK,EACLZ,KAAK,SACLS,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJ1D,eAAgBY,SAASoC,EAAEe,OAAOF,MAAO,WAKzD,kBAAC,GAAD,CAAcX,MAAM,eAChB,kBAAC,GAAD,CACItM,MAAM,OACNiN,MAAOH,EAAMtD,aAAe,GAC5B0D,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJtD,YAAa4C,EAAEe,OAAOF,aAKtC,kBAAC,GAAD,CAAcX,MAAM,WAChB,kBAAC,GAAD,CACItM,MAAM,OACNiN,MAAOH,EAAM5D,SAAW,GACxBgE,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJ5D,QAASkD,EAAEe,OAAOF,aAKlC,kBAAC,GAAD,CAAcX,MAAM,eAChB,kBAAC,GAAD,CACIW,MAAOH,EAAM3D,YAAc,GAC3BkE,IAAK,EACLZ,KAAK,SACLS,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJ3D,WAAYa,SAASoC,EAAEe,OAAOF,MAAO,WAKrD,kBAAC,GAAD,CAAcX,MAAM,kBAChB,kBAAC,GAAD,CACIW,MAAOH,EAAMjE,eAAiB,GAC9BwE,IAAK,EACLG,IAAK,EACLf,KAAK,SACLS,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJjE,cAAemB,SAASoC,EAAEe,OAAOF,MAAO,WAQxD,kBAAC,GAAD,CAAcX,MAAM,UAChB,6BACKhD,EAAO3G,KAAI,SAAA4G,GAAC,OACT,6BACI,kBAAC,GAAD,CACItG,KAAMsG,EAAEtG,KACRwJ,KAAK,WACLgB,UACIX,EAAMxD,QACAwD,EAAMxD,OAAOoE,MACT,SAAAC,GAAE,OAAIA,EAAGjK,KAAO6F,EAAE7F,MAIhCwJ,SAAU,SAAAd,GACN,IAAM9C,EAASwD,EAAMxD,QAAU,GAC3B8C,EAAEe,OAAOM,QACTV,EAAS,MACFD,EADC,CAEJxD,OAAO,GAAD,oBAAMA,GAAN,CAAcC,OAGxBwD,EAAS,MACFD,EADC,CAEJxD,OAAQA,EAAOsE,QACX,SAAAD,GAAE,OAAIA,EAAGjK,KAAO6F,EAAE7F,YAMrC6F,EAAEtG,Y,sJC3O/B,IAAMyG,GAAQvG,IAAH,MAgBJ,SAAS0K,KACZ,IAAMxK,EAAcC,YAAsBoG,IAE1C,MAAO,CADQrG,EAAYE,MAAQF,EAAYE,KAAK+F,OACpCjG,G,UChBdvB,GAAK,SAEJ,SAASgM,GAAO9L,GACnB,OAAO,yCAASA,EAAT,CAAgBO,UAAW0B,IAAWnC,GAAIE,EAAMO,c,gPCK3D,IAAMwL,GAAwB5K,IAAH,MAUpB,SAAS6K,KAAqB,IAAD,EACYjO,mBAASgB,OADrB,mBACzB8D,EADyB,KACTC,EADS,KAE1BwE,EAASuE,KAAY,IAAM,GAC3B5L,EAAQmB,IAAW,IAAM,GAHC,EAIgBrD,mBAC5C,IAL4B,mBAIzBkO,EAJyB,KAIPC,EAJO,OAOFrC,YAAYkC,GAAuB,CAC7DtJ,UAAW,CACP0J,MAAO,CACHpF,aAAckF,EAAiBlF,aAC/BE,yBACIgF,EAAiBhF,yBACrBG,eAAgB6E,EAAiB7E,eACjC1F,GAAIuK,EAAiBvK,GACrB+G,OAAQwD,EAAiBlL,MAAQkL,EAAiBlL,KAAKW,GACvDlC,KAAMyM,EAAiBzM,KACvBgI,YAAayE,EAAiBzE,YAC9B4E,SAAUH,EAAiB3E,OACrB2E,EAAiB3E,OAAO3G,KAAI,SAAA4G,GAAC,OAAIA,EAAE7F,WACnCzD,EACNkJ,WAAY8E,EAAiB9E,WAC7BlG,KAAMgL,EAAiBhL,KACvB4F,cAAeoF,EAAiBpF,cAChCK,QAAS+E,EAAiB/E,YAjB/BmF,EAPyB,oBA6B1BC,EACFL,EAAiBhL,MAAQgL,EAAiBlL,MAAQkL,EAAiBzM,KACjEH,EAAUC,cAEViN,EAAW,yCAAG,+BAAAC,EAAA,sEACwBH,IADxB,OACVI,EADU,OAEV7E,EAAU6E,EAA0BlL,KAAKgL,YAAYxK,MAAML,GACjErC,EAAQI,KAAR,iBAAuBmI,IAHP,2CAAH,qDAKjB,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAShD,kBAAgB,EAACC,YAAU,GAChC,kBAAC,GAAD,qBAGA,kBAAC,GAAD,CACIhC,eAAgBA,EAChBC,kBAAmBA,EACnBwE,OAAQA,EACRrH,MAAOA,EACP6K,MAAOmB,EACPlB,SAAUmB,IAEd,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQhD,SAAO,EAACO,UAAW6C,EAAW1L,QAAS2L,GAA/C,UAGA,kBAAC,GAAD,CAAQpD,WAAS,EAACvI,QAAS,kBAAMvB,EAAQI,KAAK,YAA9C,UAGA,kBAAC,GAAD,Q,6cChFT,IAAMiN,GAAuBvL,IAAH,M,8cCmBjC,IAAMwL,GAAcxL,IAAH,KAMXuL,IAIAE,GAAwBzL,IAAH,KAQrBuL,IAGC,SAASG,GAAqB7M,GACjC,IACQ4H,EADOG,cACPH,QAFqC,EAGD7J,mBAASgB,OAHR,mBAGtC8D,EAHsC,KAGtBC,EAHsB,KAIvCwE,EAASuE,KAAY,IAAM,GAC3B5L,EAAQmB,IAAW,IAAM,GACzB0L,EAAmBxL,YAAoBqL,GAAa,CACtDlK,UAAW,CAAEmF,QAASI,SAASJ,EAAS,OAPC,EASG7J,mBAC5C,IAVyC,mBAStCkO,EATsC,KASpBC,EAToB,OAYfrC,YAAY+C,GAAuB,CAC7DnK,UAAW,CACP0J,MAAO,CACHpF,aAAckF,EAAiBlF,aAC/BE,yBACIgF,EAAiBhF,yBACrBG,eAAgB6E,EAAiB7E,eACjC1F,GAAIuK,EAAiBvK,GACrB+G,OAAQwD,EAAiBlL,MAAQkL,EAAiBlL,KAAKW,GACvDlC,KAAMyM,EAAiBzM,KACvBgI,YAAayE,EAAiBzE,YAC9B4E,SAAUH,EAAiB3E,OACrB2E,EAAiB3E,OAAO3G,KAAI,SAAA4G,GAAC,OAAIA,EAAE7F,WACnCzD,EACNkJ,WAAY8E,EAAiB9E,WAC7BlG,KAAMgL,EAAiBhL,KACvB4F,cAAeoF,EAAiBpF,cAChCK,QAAS+E,EAAiB/E,YAjB/B6F,EAZsC,oBAiCvC1N,EAAUC,cACVyC,EAAQ+K,EAAiBvL,MAAQuL,EAAiBvL,KAAKQ,MAM7D,GALA1D,qBAAU,WACD0D,GACLmK,EAAoBnK,KACrB,CAACA,KAECA,EAAO,OAAO,kBAAC0F,GAAD,MAEnB,IAAMuF,EAAW,yCAAG,uBAAAR,EAAA,sEACVO,IADU,OAEhB1N,EAAQI,KAAR,iBAAuBmI,IAFP,2CAAH,qDAKXqF,EACFhB,EAAiBhL,MACjBgL,EAAiBlL,MACjBkL,EAAiBzM,MACjByM,EAAiBvK,GAErB,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASkD,kBAAgB,EAACC,YAAU,GAChC,kBAAC,GAAD,mBACA,kBAAC,GAAD,CACI5E,MAAOA,EACPqH,OAAQA,EACRzE,eAAgBA,EAChBC,kBAAmBA,EACnBgI,MAAOmB,EACPlB,SAAUmB,IAEd,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQhD,SAAO,EAACO,UAAWwD,EAASrM,QAASoM,GAA7C,QAGA,kBAAC,GAAD,CAAQ7D,WAAS,EAACvI,QAAS,kBAAMvB,EAAQI,KAAK,YAA9C,UAGA,kBAAC,GAAD,Q,mkBC5FhB,IAAMK,GAAK,cAEJ,SAASoN,GAAWlN,GAAe,IAC9B8K,EAAoB9K,EAApB8K,MAAOC,EAAa/K,EAAb+K,SACf,OACI,yBAAKxK,UAAWT,IACZ,kBAAC,GAAD,CAAcwK,MAAM,QAChB,kBAAC,GAAD,CACIU,YAAY,OACZC,MAAOH,EAAM7J,MAAQ,GACrBiK,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJ7J,KAAMmJ,EAAEe,OAAOF,aAK/B,kBAAC,GAAD,CAAcX,MAAM,WAChB,kBAAC,GAAD,CACIW,MAAOH,EAAMnC,SAAW,GACxBuC,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJnC,QAASyB,EAAEe,OAAOF,aAKlC,kBAAC,GAAD,CAAcX,MAAM,WAChB,kBAAC,GAAD,CACIW,MAAOH,EAAMjC,SAAW,GACxBqC,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJjC,QAASuB,EAAEe,OAAOF,aAKlC,kBAAC,GAAD,CAAcX,MAAM,eAChB,kBAAC,GAAD,CACItM,MAAM,OACNiN,MAAOH,EAAMtD,aAAe,GAC5B0D,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJtD,YAAa4C,EAAEe,OAAOF,aAKtC,kBAAC,GAAD,CAAcX,MAAM,SAChB,kBAAC,GAAD,CACIW,MAAOH,EAAMhC,OAAS,GACtBoC,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJhC,MAAOsB,EAAEe,OAAOF,aAKhC,kBAAC,GAAD,CAAcX,MAAM,QAChB,kBAAC,GAAD,CACIW,MAAOH,EAAM9B,MAAQ,GACrBkC,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJ9B,KAAMoB,EAAEe,OAAOF,aAK/B,kBAAC,GAAD,CAAcX,MAAM,UAChB,kBAAC,GAAD,CACIW,MAAOH,EAAMlC,QAAU,GACvBsC,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJlC,OAAQwB,EAAEe,OAAOF,aAKjC,kBAAC,GAAD,CAAcX,MAAM,YAChB,kBAAC,GAAD,CACIW,MAAOH,EAAM/B,UAAY,GACzBmC,SAAU,SAAAd,GAAC,OACPW,EAAS,MACFD,EADC,CAEJ/B,SAAUqB,EAAEe,OAAOF,c,4OCvG/C,IAAMkC,GAAuBhM,IAAH,MAUnB,SAASiM,KAAoB,IAAD,EACerP,mBAA0B,IADzC,mBACxBsP,EADwB,KACPC,EADO,KAEzBhB,EAAYtH,QAAQqI,EAAgBpM,MAFX,EAGF4I,YAAYsD,GAAsB,CAC3D1K,UAAW,CACP0J,MAAO,CACHxD,QAAS0E,EAAgB1E,QACzBE,QAASwE,EAAgBxE,QACzBrB,YAAa6F,EAAgB7F,YAC7BsB,MAAOuE,EAAgBvE,MACvBE,KAAMqE,EAAgBrE,KACtB/H,KAAMoM,EAAgBpM,KACtB2H,OAAQyE,EAAgBzE,OACxBG,SAAUsE,EAAgBtE,aAV/BwE,EAHwB,oBAiBzBlO,EAAUC,cAjBe,8CAmB/B,+BAAAkN,EAAA,sEAC2Ce,IAD3C,OACUC,EADV,OAEU/E,EAAS+E,EAAyBjM,KAAKkM,WAAW1M,KAAKW,GAC7DrC,EAAQI,KAAR,gBAAsBgJ,IAH1B,4CAnB+B,sBAyB/B,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAS7D,kBAAgB,EAACC,YAAU,GAChC,kBAAC,GAAD,oBACA,kBAAC,GAAD,CACIiG,MAAOuC,EACPtC,SAAUuC,IAEd,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQpE,SAAO,EAACO,UAAW6C,EAAW1L,QAlCnB,4CAkCnB,UAGA,kBAAC,GAAD,CAAQuI,WAAS,EAACvI,QAAS,kBAAMvB,EAAQI,KAAK,YAA9C,UAGA,kBAAC,GAAD,Q,gVCzDT,IAAMiO,GAA0BvM,IAAH,M,4OCYpC,IAAMwM,GAAuBxM,IAAH,MAUnB,SAASyM,KAAuB,IAC3BnF,EAAWV,cAAXU,OAD0B,EDQ/B,SAA4BA,GAC/B,IAAMC,EAAkBpH,YAAsBoM,GAAyB,CACnEjL,UAAW,CAAEf,GAAI+G,KAGrB,MAAO,CADMC,EAAgBnH,MAAQmH,EAAgBnH,KAAKR,KAC5C2H,GCXCmF,CAAmB7F,SAASS,EAAQ,KAA5C1H,EAF2B,sBAGYhD,mBAA0B,IAHtC,mBAG3BsP,EAH2B,KAGVC,EAHU,KAIlCjP,qBAAU,WACD0C,GACLuM,EAAmBvM,KACpB,CAACA,IACJ,IAAMkM,EAAUjI,QAAQqI,EAAgBpM,MAAQoM,EAAgB3L,IAR9B,EASLmI,YAAY8D,GAAsB,CAC3DlL,UAAW,CACP0J,MAAO,CACHxD,QAAS0E,EAAgB1E,QACzBE,QAASwE,EAAgBxE,QACzBrB,YAAa6F,EAAgB7F,YAC7BsB,MAAOuE,EAAgBvE,MACvBpH,GAAIsG,SAASS,GACbO,KAAMqE,EAAgBrE,KACtB/H,KAAMoM,EAAgBpM,KACtB2H,OAAQyE,EAAgBzE,OACxBG,SAAUsE,EAAgBtE,aAX/B+E,EAT2B,oBAwB5BzO,EAAUC,cAxBkB,8CA0BlC,+BAAAkN,EAAA,sEAC2CsB,IAD3C,OACUN,EADV,OAEU/E,EAAS+E,EAAyBjM,KAAKwM,WAAWhN,KAAKW,GAC7DrC,EAAQI,KAAR,gBAAsBgJ,IAH1B,4CA1BkC,sBAgClC,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAS7D,kBAAgB,EAACC,YAAU,GAChC,kBAAC,GAAD,kBACA,kBAAC,GAAD,CACIiG,MAAOuC,EACPtC,SAAUuC,IAEd,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQpE,SAAO,EAACO,UAAWwD,EAASrM,QAzCd,4CAyCtB,QAGA,kBAAC,GAAD,CAAQuI,WAAS,EAACvI,QAAS,kBAAMvB,EAAQI,KAAK,YAA9C,UAGA,kBAAC,GAAD,Q,UChEVK,GAAK,oBAEJ,SAASkO,KACZ,OAAO,6BACH,yBAAKzN,UAAS,UAAKT,GAAL,aACV,kBAAC,GAAD,CAAQoJ,SAAO,GAAf,YAIJ,yBAAK3I,UAAS,UAAKT,GAAL,aACV,kBAAC,GAAD,CAAQqJ,WAAS,GAAjB,cAIJ,yBAAK5I,UAAS,UAAKT,GAAL,aACV,kBAAC,GAAD,CAAQsJ,QAAM,GAAd,WAIJ,yBAAK7I,UAAS,UAAKT,GAAL,aACV,kBAAC,GAAD,OAEJ,yBAAKS,UAAS,UAAKT,GAAL,aACV,kBAAC,GAAD,KACI,kBAAC,GAAD,UACA,kBAAC,GAAD,aCjBhB,IA+CemO,GA/CO,WACpB,OACE,kBAAC,KAAD,CAAgBC,OAAQ7F,IACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8F,KAAK,sBACV,kBAACH,GAAD,OAEF,kBAAC,IAAD,CAAOI,OAAK,EAACD,KAAK,UAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,oBACV,kBAACnC,GAAD,OAEF,kBAAC,IAAD,CAAOmC,KAAK,yBACV,kBAACtB,GAAD,OAEF,kBAAC,IAAD,CAAOsB,KAAK,mBACV,kBAACf,GAAD,OAEF,kBAAC,IAAD,CAAOe,KAAK,uBACV,kBAACP,GAAD,OAEF,kBAAC,IAAD,CAAOO,KAAK,cACV,kBAACjG,GAAD,OAEF,kBAAC,IAAD,CAAOiG,KAAK,gBACV,kBAAChG,GAAD,OAEF,kBAAC,IAAD,CAAOgG,KAAK,YACV,kBAAC/F,GAAD,OAEF,kBAAC,IAAD,CAAO+F,KAAK,mBACV,kBAACrG,GAAD,OAEF,kBAAC,IAAD,CAAOqG,KAAK,iBACV,kBAAC3F,GAAD,OAEF,kBAAC,IAAD,CAAO2F,KAAK,KACV,kBAAC1I,GAAD,WC5CQT,QACW,cAA7BzG,OAAO8P,SAASC,UAEe,UAA7B/P,OAAO8P,SAASC,UAEhB/P,OAAO8P,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,mB","file":"static/js/main.a523c6e8.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\ntype Dimensions = {\n  width: number | undefined\n  height: number | undefined\n}\n\nexport function useDimensions() {\n  const [dimensions, setDimensions] = useState<Dimensions>({ width: undefined, height: undefined })\n\n  useEffect(() => {\n    function updateDimensions() {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      setDimensions({ width, height })\n    }\n\n    window.addEventListener('resize', updateDimensions)\n    updateDimensions()\n\n    return () => {\n      window.removeEventListener('resize', updateDimensions)\n    }\n  }, [])\n\n  return dimensions\n}","import { useHistory, useLocation } from \"react-router\"\nimport { useUrlSearchParams } from \"./useUrlSearchParams\"\nimport moment, { Moment } from \"moment\";\n\nfunction queryStringFromSelectedDate(date: Moment) {\n  return date.toISOString()\n}\n\nfunction selectedDateFromQueryString(queryString: string | null) {\n  if (!queryString) return undefined;\n  return moment(queryString)\n}\n\nexport function useSelectedDate() {\n  const query = useUrlSearchParams()\n  const selectedDate = selectedDateFromQueryString(query.get('date'))\n  const history = useHistory()\n  const pathname = useLocation().pathname\n  const setSelectedDate = (date: moment.Moment) => {\n    history.push(`${pathname}?date=${queryStringFromSelectedDate(date)}`)\n  }\n  return [selectedDate, setSelectedDate] as const\n}\n","import { useLocation } from \"react-router\";\n\nexport function useUrlSearchParams() {\n  return new URLSearchParams(useLocation().search)\n}","import React, { useState } from 'react'\nimport { Club } from '../api'\nimport { ReactNode } from 'react'\nimport './ClubList.scss'\nimport * as R from 'ramda'\n\ntype Props = {\n    clubs: Club[]\n    renderClub: (club: Club) => ReactNode\n    showFirst?: number\n}\n\nconst sortClubsByName = R.sortBy(R.prop('name'))\n\nconst cn = 'club-list'\n\nexport function ClubList(props: Props) {\n    const { clubs, renderClub, showFirst } = props\n    const [showAll, setShowAll] = useState(false)\n\n    const sortedClubs = sortClubsByName(clubs)\n\n    function renderContent() {\n        if (sortedClubs === undefined) return 'Loading...'\n        if (sortedClubs.length === 0) return 'No events listed today'\n        const displayedClubs =\n            !showAll && showFirst ? R.take(showFirst, sortedClubs) : sortedClubs\n        const difference = sortedClubs.length - displayedClubs.length\n        return (\n            <>\n                {displayedClubs.map(renderClub)}\n                {difference > 0 && (\n                    <div\n                        className={`${cn}__see-more`}\n                        onClick={() => setShowAll(true)}\n                    >\n                        See More ({difference})\n                    </div>\n                )}\n                {showAll && (\n                    <div\n                        className={`${cn}__see-more`}\n                        onClick={() => setShowAll(false)}\n                    >\n                        Show Less\n                    </div>\n                )}\n            </>\n        )\n    }\n\n    return (\n        <div className={cn}>\n            <div className={`${cn}__header`}>Clubs</div>\n            <div className={`${cn}__content`}>{renderContent()}</div>\n        </div>\n    )\n}\n","import React, { ComponentProps } from 'react'\nimport './ClubListItem.scss'\n\ntype Club = {\n    name: string\n}\ntype Props = { club: Club } & ComponentProps<'div'>\n\nconst cn = 'club-list-item'\n\nexport function ClubListItem(props: Props) {\n    const { club, ...divProps } = props\n    return (\n        <div className={cn} {...divProps}>\n            {club.name}\n        </div>\n    )\n}\n","import gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nexport const CLUBS_QUERY = gql`\n    {\n        clubs {\n            id\n            name\n        }\n    }\n`\ntype QueryResult = {\n    clubs: {\n        id: number\n        name: string\n    }[]\n}\n\nexport function useClubs() {\n    const queryResult = useQuery<QueryResult>(CLUBS_QUERY)\n    const clubs = queryResult.data && queryResult.data.clubs\n    return [clubs, queryResult] as const\n}","import React from 'react'\nimport { ClubList } from '../components/ClubList'\nimport { ClubListItem } from '../components/ClubListItem'\nimport { useHistory } from 'react-router'\nimport { useClubs } from './useClubs'\n\nexport function ClubListContainer() {\n    const clubs = useClubs()[0] || []\n    const history = useHistory()\n    return (\n        <ClubList\n            clubs={clubs}\n            renderClub={club => (\n                <ClubListItem\n                    key={club.name}\n                    club={club}\n                    onClick={() => history.push(`/club/${club.id}`)}\n                />\n            )}\n            showFirst={15}\n        />\n    )\n}\n","import React, { ReactNode } from 'react'\nimport './EventList.scss'\n\ntype Props<Event> = {\n    events: Event[]\n    renderEvent: (event: Event) => ReactNode\n}\n\nconst cn = 'event-list'\n\nexport function EventList<Event>(props: Props<Event>) {\n    const { events, renderEvent } = props\n\n    function renderContent() {\n        if (events === undefined) return 'Loading...'\n        if (events.length === 0) return 'No events listed today'\n        return events.map(renderEvent)\n    }\n\n    return <div className={cn}>{renderContent()}</div>\n}\n","import React from 'react'\nimport './EventCard.scss'\nimport classNames from 'classnames'\n\ntype Props = {\n    event: {\n        name: string\n        imageUrl: string\n        club: { name: string }\n    }\n    onClick: () => void\n    desktop?: boolean\n}\n\nconst cn = 'event-card'\n\nexport function EventCard(props: Props) {\n    const { event, onClick, desktop } = props\n    return (\n        <div\n            className={classNames(cn, {\n                [`${cn}--desktop`]: desktop,\n                [`${cn}--mobile`]: !desktop,\n            })}\n            onClick={onClick}\n        >\n            <div className={`${cn}__picture-wrapper`}>\n                <img\n                    className={`${cn}__picture`}\n                    src={'./' + event.imageUrl}\n                    alt={`event ${event.name}`}\n                />\n            </div>\n            <div className={`${cn}__information`}>\n                <div className={`${cn}__name`}>{event.name}</div>\n                <div className={`${cn}__club-name`}>{event.club.name}</div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { EventList } from '../components/EventList';\nimport { EventCard } from '../components/EventCard';\nimport gql from 'graphql-tag';\nimport { Event } from '../api';\nimport { useQuery } from '@apollo/react-hooks';\nimport moment from 'moment';\n\ntype Props = {\n    selectedDate: moment.Moment | undefined\n    desktop?: boolean\n    onEventClick: (event: { id: number }) => void\n}\n\nconst EVENTS_QUERY = gql`\n  query homePageEventsQuery($eventsQueryFilter: EventsQueryFilter) {\n    events(filter: $eventsQueryFilter) {\n      id\n      name\n      date\n      imageUrl\n      club {\n        id\n        name\n      }\n    }\n  }\n`\ntype EventsQueryData = {\n  events: Pick<Event, 'id' | 'name' | 'date' | 'imageUrl' | 'club'>[]\n}\n\nexport function EventListContainer(props: Props) {\n  const { selectedDate, desktop, onEventClick } = props\n  const eventsQueryResult = useQuery<EventsQueryData>(EVENTS_QUERY, {\n    variables: {\n      eventsQueryFilter: {\n        date: selectedDate && selectedDate.toISOString()\n      }\n    }\n  })\n  const events = (eventsQueryResult.data && eventsQueryResult.data.events) || []\n  return (\n      <EventList\n        events={events}\n        renderEvent={event => (\n          <EventCard\n            desktop={desktop}\n            key={event.id}\n            event={event}\n            onClick={() => onEventClick({ id: event.id })}\n          />\n        )}\n      />\n  )\n}","import * as R from 'ramda'\nimport moment, { Moment, weekdaysMin } from 'moment'\nimport React from 'react'\nimport './Calendar.scss'\nimport classNames from 'classnames'\n\ntype Props = {\n    monthSelection: Moment\n    selectedDate: Moment | undefined\n    setSelectedDate(selectedDate: Moment): void\n    setMonthSelection(monthSelection: Moment): void\n}\n\nconst cn = 'calendar'\n\nexport function Calendar(props: Props) {\n    const {\n        setSelectedDate,\n        selectedDate,\n        monthSelection,\n        setMonthSelection,\n    } = props\n    const weeksInMonth = getWeeksInMonth(\n        monthSelection.year(),\n        monthSelection.month()\n    )\n\n    function renderHeader() {\n        return (\n            <div className={`${cn}__header`}>\n                <div\n                    className={`${cn}__month-switcher`}\n                    onClick={() =>\n                        setMonthSelection(\n                            moment(monthSelection).subtract(1, 'month')\n                        )\n                    }\n                >\n                    ←\n                </div>\n                <div>{monthSelection.format('MMMM YYYY')}</div>\n                <div\n                    className={`${cn}__month-switcher`}\n                    onClick={() =>\n                        setMonthSelection(\n                            moment(monthSelection).add(1, 'month')\n                        )\n                    }\n                >\n                    →\n                </div>\n            </div>\n        )\n    }\n\n    function renderWeek(week: Moment[]) {\n        return (\n            <div\n                className={`${cn}__week`}\n                key={'week-from-' + week[0].toISOString()}\n            >\n                {week.map(renderDay)}\n            </div>\n        )\n    }\n\n    function renderDay(day: Moment) {\n        const isInMonth = day.month() === monthSelection.month()\n        const isWeekend = [0, 6].includes(day.weekday())\n        const isSelected = selectedDate && selectedDate.isSame(day, 'day')\n        return (\n            <div\n                key={day.toISOString()}\n                className={classNames(`${cn}__date`, {\n                    [`${cn}__date--weekend`]: isWeekend,\n                    [`${cn}__date--selected`]: isSelected,\n                })}\n                onClick={() => setSelectedDate(day)}\n            >\n                {isInMonth && day.date()}\n            </div>\n        )\n    }\n\n    function renderWeekdayHeader() {\n        const renderWeekDay = (weekday: number) => (\n            <div className={`${cn}__weekday`} key={weekday}>\n                {weekdaysMin()[weekday]}\n            </div>\n        )\n        return (\n            <div className={`${cn}__week-header`}>\n                {R.times(renderWeekDay, 7)}\n            </div>\n        )\n    }\n\n    return (\n        <div className={`${cn}__wrapper`}>\n            {renderHeader()}\n            {renderWeekdayHeader()}\n            {weeksInMonth.map(renderWeek)}\n        </div>\n    )\n}\n\nfunction getWeeksInMonth(year: number, month: number) {\n    const firstDayOfFirstWeek = moment()\n        .year(year)\n        .month(month)\n        .startOf('month')\n        .startOf('week')\n    const daysInWeeks: Moment[][] = []\n    let day: Moment = moment(firstDayOfFirstWeek)\n    const lastDayOfLastWeek = moment()\n        .year(year)\n        .month(month)\n        .endOf('month')\n        .endOf('week')\n    while (true) {\n        const isMonday = day.weekday() === 0\n        if (day.isAfter(lastDayOfLastWeek)) break\n        if (isMonday) {\n            daysInWeeks.push([day])\n        } else {\n            const lastWeek = daysInWeeks[daysInWeeks.length - 1]\n            lastWeek.push(day)\n        }\n        day = moment(day).add(1, 'day')\n    }\n    return daysInWeeks\n}\n","import classNames from 'classnames'\nimport './Page.scss'\nimport React, { ComponentProps } from 'react';\n\ntype Props = ComponentProps<'div'>\n\nconst cn = 'page'\n\nexport function Page(props: Props) {\n    const { children, ...divProps } = props\n    return (\n        <div\n            {...divProps}\n            className={classNames(cn, props.className)}\n        >\n            {children}\n        </div>\n    )\n}","import React from 'react'\nimport './Footer.scss'\n\ntype Props = {\n    children: React.ReactNode\n}\n\nconst cn = 'footer'\n\nexport function Footer(props: Props) {\n    return (\n        <footer className={cn}>\n            <div className={`${cn}__content`}>{props.children}</div>\n        </footer>\n    )\n}\n","import React from 'react';\nimport { Footer } from \"../components/Footer\";\nimport { useHistory } from 'react-router';\n\nexport function FooterContainer() {\n    const history = useHistory()\n    return (\n        <Footer>\n            <button onClick={() => history.push('/impressum')}>Impressum</button>\n            <button onClick={() => history.push('/data-policy')}>Data Policy</button>\n            <button onClick={() => history.push('/contact')}>Contact</button>\n        </Footer>\n    )\n}","import './Content.scss'\nimport classNames from 'classnames'\nimport React, { ComponentProps } from 'react'\nimport { FooterContainer } from '../containers/FooterContainer'\n\ntype Props = ComponentProps<'div'> & {\n    scrollable?: boolean\n    restrictMaxWidth?: boolean\n}\n\nconst cn = 'content'\n\nexport function Content(props: Props) {\n    const { restrictMaxWidth, scrollable, children, ...divProps } = props\n    return (\n        <div\n            className={classNames(cn, scrollable && `${cn}--scrollable`)}\n            {...divProps}\n        >\n            {restrictMaxWidth ? (\n                <div className={`${cn}__scrollable-content`}>\n                    <div className={`${cn}__max-width-wrapper`}>\n                        {children}\n                    </div>\n                    <FooterContainer />\n                </div>\n            ) : (\n                <div className={`${cn}__scrollable-content`}>\n                    {children}\n                    <FooterContainer />\n                </div>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelectedDate } from './useSelectedDate'\nimport { useHistory, useLocation, Redirect } from 'react-router'\nimport { useDimensions } from './useDimensions'\nimport moment from 'moment'\nimport { Header } from '../components/Header'\nimport { SelectedDate } from '../components/SelectedDate'\nimport { ClubListContainer } from './ClubListContainer'\nimport { EventListContainer } from './EventListContainer'\nimport { Calendar } from '../components/Calendar'\nimport './HomeDesktopContent.scss'\nimport { FooterContainer } from './FooterContainer'\nimport { Page } from '../components/Page'\nimport { Content } from '../components/Content'\nimport { H1Title } from '../components/H1Title'\n\ntype Props = {\n    monthSelection: moment.Moment\n    setMonthSelection: (monthSelection: moment.Moment) => void\n}\n\nconst PickDate = () => <span>Pick a date</span>\n\nconst cn = 'home-desktop-content'\n\nexport function HomeDesktopContent(props: Props) {\n    const { monthSelection, setMonthSelection } = props\n    const dimensions = useDimensions()\n    const showClubList = Boolean(!dimensions.width || dimensions.width > 1000)\n    const [selectedDate, setSelectedDate] = useSelectedDate()\n    const search = useLocation().search\n    const history = useHistory()\n    if (!selectedDate)\n        return <Redirect to={`/?date=${moment().toISOString()}`} />\n    const onEventClick = (event: { id: number }) =>\n        history.push(`/event/${event.id}${search}`)\n    return (\n        <Page className={cn}>\n            <div className={`${cn}__title`}>\n                Events on {selectedDate.format('D. MMMM')}\n            </div>\n            <div className={`${cn}__calendar-anchor`}>\n                <div className={`${cn}__calendar-wrapper`}>\n                    <Calendar\n                        monthSelection={monthSelection}\n                        setMonthSelection={setMonthSelection}\n                        selectedDate={selectedDate}\n                        setSelectedDate={setSelectedDate}\n                    />\n                </div>\n            </div>\n            <Content scrollable restrictMaxWidth>\n                {showClubList && (\n                    <div className={`${cn}__club-list-wrapper`}>\n                        <ClubListContainer />\n                    </div>\n                )}\n                <div className={`${cn}__event-list-wrapper`}>\n                    <EventListContainer\n                        selectedDate={selectedDate}\n                        desktop\n                        onEventClick={onEventClick}\n                    />\n                </div>\n            </Content>\n        </Page>\n    )\n}\n","import './SelectedDate.scss'\nimport classNames from 'classnames'\nimport React, { ComponentProps } from 'react'\nimport { Moment } from 'moment';\n\ntype Props = ComponentProps<'div'> & { date: Moment }\n\nconst cn = \"selected-date\"\n\nexport function SelectedDate(props: Props) {\n    const { date, ...divProps } = props;\n    return (\n      <div className={classNames(cn, props.onClick && `${cn}--clickable`)} {...divProps}>\n        {date.format('D. MMMM')}\n      </div>\n    )\n}","import './Header.scss'\nimport React, { ReactNode } from 'react';\n\ntype Props = {\n    children: ReactNode\n}\n\nconst cn = 'header'\n\nexport function Header(props: Props) {\n    return (\n        <div className={cn}>\n            <div className={`${cn}__content`}>\n                {props.children}\n            </div>\n        </div>\n    )\n}","import './HomeMobileContent.scss'\nimport classNames from 'classnames'\nimport React, { useState } from 'react'\nimport moment from 'moment'\nimport { useSelectedDate } from './useSelectedDate'\nimport { useHistory, useLocation, Redirect } from 'react-router'\nimport { SelectedDate } from '../components/SelectedDate'\nimport { Calendar } from '../components/Calendar'\nimport { EventListContainer } from './EventListContainer'\nimport { Header } from '../components/Header'\nimport { Page } from '../components/Page'\nimport { Content } from '../components/Content'\n\ntype Props = {\n    monthSelection: moment.Moment\n    setMonthSelection: (monthSelection: moment.Moment) => void\n}\n\nconst PickDate = () => <span>Pick a date</span>\n\nconst cn = 'home-mobile-content'\n\nexport function HomeMobileContent(props: Props) {\n    const { monthSelection, setMonthSelection } = props\n    const [selectedDate, setSelectedDate] = useSelectedDate()\n    const [displayCalendar, setDisplayCalendar] = useState(!selectedDate)\n    const history = useHistory()\n    const search = useLocation().search\n    if (!selectedDate)\n        return <Redirect to={`/?date=${moment().toISOString()}`} />\n    const onEventClick = (event: { id: number }) =>\n        history.push(`/event/${event.id}${search}`)\n    return (\n        <Page>\n            <Header>\n                {selectedDate ? (\n                    <SelectedDate\n                        date={selectedDate}\n                        onClick={() =>\n                            setDisplayCalendar(\n                                displayCalendar => !displayCalendar\n                            )\n                        }\n                    />\n                ) : (\n                    <PickDate />\n                )}\n            </Header>\n            <div\n                className={classNames(`${cn}__calendar-wrapper`, {\n                    [`${cn}__calendar-wrapper--hidden`]: !displayCalendar,\n                })}\n            >\n                <Calendar\n                    monthSelection={monthSelection}\n                    setMonthSelection={setMonthSelection}\n                    selectedDate={selectedDate}\n                    setSelectedDate={selectedDate => {\n                        setSelectedDate(selectedDate)\n                        setDisplayCalendar(false)\n                    }}\n                />\n            </div>\n            <Content scrollable>\n                <EventListContainer\n                    selectedDate={selectedDate}\n                    onEventClick={onEventClick}\n                />\n            </Content>\n        </Page>\n    )\n}\n","import React, { useState } from 'react'\nimport moment from 'moment';\nimport { useDimensions } from '../containers/useDimensions';\nimport { HomeDesktopContent } from '../containers/HomeDesktopContent';\nimport { HomeMobileContent } from '../containers/HomeMobileContent';\n\ntype Props = {}\n\nconst currentDate = moment()\n\nexport function HomePage(props: Props) {\n  const dimensions = useDimensions()\n  const [monthSelection, setMonthSelection] = useState(currentDate)\n  const desktop = Boolean(dimensions.width && dimensions.width > 800);\n  const commonProps = { monthSelection, setMonthSelection }\n  return desktop ? <HomeDesktopContent {...commonProps} /> : <HomeMobileContent {...commonProps} />\n}\n","import React, { ComponentProps } from 'react'\nimport classNames from 'classnames'\n\ntype Props = ComponentProps<'i'> & { icon: string }\n\nexport function Icon(props: Props) {\n    const { icon, ...restProps } = props\n    return <i className={classNames(`fas fa-${icon}`)} {...restProps} />\n}\n","import './GoBackButton.scss'\nimport React, { ComponentProps } from 'react';\nimport { Icon } from './Icon';\n\ntype Props = ComponentProps<'button'>\n\nconst cn = 'go-back-button'\n\nexport function GoBackButton(props: Props) {\n    return (\n        <button className={cn} {...props}>\n            <Icon icon=\"arrow-left\" />\n        </button>\n    )\n}","import React from 'react'\n\ntype Props = {\n    text: string\n}\nexport function TextWithLineBreaks(props: Props) {\n    const { text } = props\n    \n    if (!text) return null\n\n    const lines = text.split('\\n')\n\n    function renderLine(line: string, lineIndex: number, allLines: string[]) {\n        const isLastLine = lineIndex === allLines.length - 1\n        if (isLastLine) return <span key={lineIndex}>{line}</span>\n        return (\n            <React.Fragment key={lineIndex}>\n                <span>{line}</span>\n                <br />\n            </React.Fragment>\n        )\n    }\n\n    return <>{lines.map(renderLine)}</>\n}\n","import './KeyValueFields.scss'\nimport React from 'react'\nimport { ComponentProps } from 'react'\n\ntype Props = ComponentProps<'div'>\n\nconst cn = 'key-value-fields'\n\nexport function KeyValueFields(props: Props) {\n    const { children, ...divProps } = props\n    return (\n        <div className={cn} {...divProps}>\n            {children}\n        </div>\n    )\n}","import './KeyValueField.scss'\nimport React from 'react'\n\ntype Props = {\n    fieldKey: string\n    fieldValue: string | undefined\n}\n\nconst cn = 'key-value-field'\n\nexport function KeyValueField(props: Props) {\n    const { fieldKey, fieldValue } = props\n    if (!fieldValue) return null\n    return (\n        <div className={cn}>\n            <div className={`${cn}__value`}>{fieldValue}</div>\n            <div className={`${cn}__key`}>{fieldKey}</div>\n        </div>\n    )\n}","import './H1Title.scss'\nimport React, { ReactNode } from 'react';\n\ntype Props = {\n    children: ReactNode\n}\n\nconst cn = 'h1-title';\n\nexport function H1Title(props: Props) {\n    return (\n        <div className={cn}>\n            <h1>{props.children}</h1>\n            <div className={`${cn}__divider`} />\n        </div>\n    )\n}","import './EventDetails.scss'\nimport * as R from 'ramda'\nimport React from 'react'\nimport { TextWithLineBreaks } from './TextWithLineBreaks'\nimport { Event } from '../api'\nimport { KeyValueFields } from './KeyValueFields'\nimport { KeyValueField } from './KeyValueField'\nimport { H1Title } from './H1Title'\n\ntype Props = {\n    event: Event\n}\n\n// TODO: use KeyValueFields in container ? could type properly\nconst cn = 'event-details'\n\nexport function EventDetails(props: Props) {\n    const { event } = props\n    return (\n        <div className={cn}>\n            <div className={`${cn}__content`}>\n                <H1Title>{event.name}</H1Title>\n                <div className={`${cn}__picture-and-short-info`}>\n                    <div className={`${cn}__picture-wrapper`}>\n                        <img\n                            className={`${cn}__picture`}\n                            src={'./' + event.imageUrl}\n                            alt=\"event\"\n                        />\n                    </div>\n                    <KeyValueFields>\n                        <KeyValueField\n                            fieldKey=\"Club\"\n                            fieldValue={event.club.name}\n                        />\n                        <KeyValueField\n                            fieldKey=\"Price Category\"\n                            fieldValue={\n                                event.priceCategory\n                                    ? R.times(\n                                          () => '€',\n                                          event.priceCategory\n                                      ).join('')\n                                    : ''\n                            }\n                        />\n                        <KeyValueField\n                            fieldKey=\"Admission Fee\"\n                            // TODO: ignores 0\n                            fieldValue={\n                                event.admissionFee\n                                    ? event.admissionFee.toFixed(2) + '€'\n                                    : undefined\n                            }\n                        />\n                        <KeyValueField\n                            fieldKey=\"Admission Fee With Discount\"\n                            // TODO: ignores 0\n                            fieldValue={\n                                event.admissionFeeWithDiscount\n                                    ? event.admissionFeeWithDiscount.toFixed(\n                                          2\n                                      ) + '€'\n                                    : undefined\n                            }\n                        />\n                        <KeyValueField\n                            fieldKey=\"Special\"\n                            fieldValue={event.special}\n                        />\n                        <KeyValueField\n                            fieldKey=\"Minimum Age\"\n                            fieldValue={\n                                event.minimumAge\n                                    ? event.minimumAge + '+'\n                                    : undefined\n                            }\n                        />\n                        <KeyValueField\n                            fieldKey=\"Amount of Floors\"\n                            fieldValue={\n                                event.amountOfFloors\n                                    ? event.amountOfFloors.toString()\n                                    : undefined\n                            }\n                        />\n                        <KeyValueField\n                            fieldKey=\"Genres\"\n                            fieldValue={\n                                event.genres\n                                    ? event.genres.map(g => g.name).join(', ')\n                                    : undefined\n                            }\n                        />\n                    </KeyValueFields>\n                </div>\n                <section>\n                    <TextWithLineBreaks text={event.description} />\n                </section>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport function LoadingIndicator() {\n    return <div>Loading...</div>\n}","import { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { Club, Genre, Event } from \"../api\";\n\nconst QUERY = gql`\n    query eventQuery($eventId: Int!) {\n        event(id: $eventId) {\n            admissionFee\n            admissionFeeWithDiscount\n            amountOfFloors\n            club {\n                id\n                name\n            }\n            date\n            description\n            genres {\n                id\n                name\n            }\n            id\n            imageUrl\n            minimumAge\n            name\n            priceCategory\n            special\n        }\n    }\n`\n\nexport type EventWithDetails = Pick<\n    Event,\n    | 'admissionFee'\n    | 'admissionFeeWithDiscount'\n    | 'amountOfFloors'\n    | 'date'\n    | 'description'\n    | 'id'\n    | 'imageUrl'\n    | 'minimumAge'\n    | 'name'\n    | 'priceCategory'\n    | 'special'\n> & {\n    club: Pick<Club, 'id' | 'name'>\n    genres: Pick<Genre, 'id' | 'name'>[]\n}\n\ntype QueryData = {\n    event: EventWithDetails\n}\n\nexport function useEventWithDetails(eventId: number) {\n    const queryResult = useQuery<QueryData>(QUERY, {\n        variables: { eventId: eventId }\n    })\n    const event = queryResult.data && queryResult.data.event\n    return [event, queryResult] as const\n}","import React from 'react';\nimport { EventDetails } from \"../components/EventDetails\";\nimport { LoadingIndicator } from \"../components/LoadingIndicator\";\nimport { useEventWithDetails } from './useEventWithDetails';\n\ntype Props = {\n    eventId: number | undefined\n}\n\nexport function EventDetailsContainer(props: Props) {\n    const { eventId } = props;\n    const event = useEventWithDetails(eventId!)[0]\n    if (!eventId) return null\n    if (event === undefined) return <LoadingIndicator />\n    return <EventDetails event={event} />\n}","import React from 'react'\nimport { useParams, useHistory, useLocation } from 'react-router'\nimport { Header } from '../components/Header'\nimport { GoBackButton } from '../components/GoBackButton'\nimport { FooterContainer } from '../containers/FooterContainer'\nimport { Page } from '../components/Page'\nimport { EventDetailsContainer } from '../containers/EventDetailsContainer'\nimport { Content } from '../components/Content'\n\ntype Props = {}\n\ntype Params = {\n    eventId: string\n}\n\n\nexport function EventDetailPage(props: Props) {\n    const params = useParams<Params>()\n    const { eventId } = params\n    const history = useHistory()\n    const search = useLocation().search\n\n    return (\n        <Page>\n            <Header>\n                <GoBackButton onClick={() => history.push(`/${search}`)} />\n            </Header>\n            <Content restrictMaxWidth scrollable>\n                <EventDetailsContainer\n                    eventId={eventId ? parseInt(eventId, 10) : undefined}\n                />\n            </Content>\n        </Page>\n    )\n}","import './FormattedHtml.scss'\nimport React, { ComponentProps } from 'react';\n\ntype Props = ComponentProps<'div'>\n\nconst cn = 'formatted-html'\n\nexport function FormattedHtml(props: Props) {\n    return (\n        <div className={cn}>\n            {props.children}\n        </div>\n    )\n}","import React from 'react';\nimport { Page } from '../components/Page';\nimport { Header } from '../components/Header';\nimport { Content } from '../components/Content';\nimport { FormattedHtml } from '../components/FormattedHtml';\nimport { GoBackButton } from '../components/GoBackButton';\nimport { useHistory } from 'react-router';\nimport { FooterContainer } from '../containers/FooterContainer';\nimport { H1Title } from '../components/H1Title';\n\nexport function ImpressumPage() {\n    const history = useHistory()\n    return (\n        <Page>\n            <Header>\n                <GoBackButton onClick={() => history.push('/')} />\n            </Header>\n            <Content restrictMaxWidth scrollable>\n                <H1Title>\n                    Impressum\n                </H1Title>\n                <FormattedHtml>\n                    Angaben gemäß § 5 TMG <br /><br />\n                    Falco Huhold<br />\n                    Kreuzstr. 3<br />\n                    01067 Dresden<br />\n                    <h3>Vertreten durch:</h3>\n                    Falco Huhold<br />\n                    Kontakt:<br />\n                    Telefon: 0172-4277088<br />\n                    E-Mail: f.huhold@online.de<br />\n                    <h3>Verantwortlich für den Inhalt nach § 55 Abs. 2 RStV:</h3>\n                    Falco Huhold<br />\n                    Kreuzstr. 3<br />\n                    01067 Dresden<br />\n                    <h2>Haftungsausschluss:</h2>\n                    <h3>Haftung für Inhalte</h3>\n                    Die Inhalte unserer Seiten wurden mit größter Sorgfalt erstellt. Für die Richtigkeit, Vollständigkeit und Aktualität der Inhalte können wir jedoch keine Gewähr übernehmen. Als Diensteanbieter sind wir gemäß § 7 Abs.1 TMG für eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach §§ 8 bis 10 TMG sind wir als Diensteanbieter jedoch nicht verpflichtet, übermittelte oder gespeicherte fremde Informationen zu überwachen oder nach Umständen zu forschen, die auf eine rechtswidrige Tätigkeit hinweisen. Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unberührt. Eine diesbezügliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung möglich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen.\n                    <h3>Haftung für Links</h3>\n                    Unser Angebot enthält Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb können wir für diese fremden Inhalte auch keine Gewähr übernehmen. Für die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf mögliche Rechtsverstöße überprüft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.\n                    <h3>Urheberrecht</h3>\n                    Die durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielfältigung, Bearbeitung, Verbreitung und jede Art der Verwertung außerhalb der Grenzen des Urheberrechtes bedürfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur für den privaten, nicht kommerziellen Gebrauch gestattet. Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.\n                    <h3>Datenschutz</h3>\n                    Die Nutzung unserer Webseite ist in der Regel ohne Angabe personenbezogener Daten möglich. Soweit auf unseren Seiten personenbezogene Daten (beispielsweise Name, Anschrift oder eMail-Adressen) erhoben werden, erfolgt dies, soweit möglich, stets auf freiwilliger Basis. Diese Daten werden ohne Ihre ausdrückliche Zustimmung nicht an Dritte weitergegeben.\n                    Wir weisen darauf hin, dass die Datenübertragung im Internet (z.B. bei der Kommunikation per E-Mail) Sicherheitslücken aufweisen kann. Ein lückenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht möglich.\n                    Der Nutzung von im Rahmen der Impressumspflicht veröffentlichten Kontaktdaten durch Dritte zur Übersendung von nicht ausdrücklich angeforderter Werbung und Informationsmaterialien wird hiermit ausdrücklich widersprochen. Die Betreiber der Seiten behalten sich ausdrücklich rechtliche Schritte im Falle der unverlangten Zusendung von Werbeinformationen, etwa durch Spam-Mails, vor.\n                    <h3>Google Analytics</h3>\n                    Diese Website benutzt Google Analytics, einen Webanalysedienst der Google Inc. (''Google''). Google Analytics verwendet sog. ''Cookies'', Textdateien, die auf Ihrem Computer gespeichert werden und die eine Analyse der Benutzung der Website durch Sie ermöglicht. Die durch den Cookie erzeugten Informationen über Ihre Benutzung dieser Website (einschließlich Ihrer IP-Adresse) wird an einen Server von Google in den USA übertragen und dort gespeichert. Google wird diese Informationen benutzen, um Ihre Nutzung der Website auszuwerten, um Reports über die Websiteaktivitäten für die Websitebetreiber zusammenzustellen und um weitere mit der Websitenutzung und der Internetnutzung verbundene Dienstleistungen zu erbringen. Auch wird Google diese Informationen gegebenenfalls an Dritte übertragen, sofern dies gesetzlich vorgeschrieben oder soweit Dritte diese Daten im Auftrag von Google verarbeiten. Google wird in keinem Fall Ihre IP-Adresse mit anderen Daten der Google in Verbindung bringen. Sie können die Installation der Cookies durch eine entsprechende Einstellung Ihrer Browser Software verhindern; wir weisen Sie jedoch darauf hin, dass Sie in diesem Fall gegebenenfalls nicht sämtliche Funktionen dieser Website voll umfänglich nutzen können. Durch die Nutzung dieser Website erklären Sie sich mit der Bearbeitung der über Sie erhobenen Daten durch Google in der zuvor beschriebenen Art und Weise und zu dem zuvor benannten Zweck einverstanden.\n                    <h3>Google AdSense</h3>\n                    Diese Website benutzt Google Adsense, einen Webanzeigendienst der Google Inc., USA (''Google''). Google Adsense verwendet sog. ''Cookies'' (Textdateien), die auf Ihrem Computer gespeichert werden und die eine Analyse der Benutzung der Website durch Sie ermöglicht. Google Adsense verwendet auch sog. ''Web Beacons'' (kleine unsichtbare Grafiken) zur Sammlung von Informationen. Durch die Verwendung des Web Beacons können einfache Aktionen wie der Besucherverkehr auf der Webseite aufgezeichnet und gesammelt werden. Die durch den Cookie und/oder Web Beacon erzeugten Informationen über Ihre Benutzung dieser Website (einschließlich Ihrer IP-Adresse) werden an einen Server von Google in den USA übertragen und dort gespeichert. Google wird diese Informationen benutzen, um Ihre Nutzung der Website im Hinblick auf die Anzeigen auszuwerten, um Reports über die Websiteaktivitäten und Anzeigen für die Websitebetreiber zusammenzustellen und um weitere mit der Websitenutzung und der Internetnutzung verbundene Dienstleistungen zu erbringen. Auch wird Google diese Informationen gegebenenfalls an Dritte übertragen, sofern dies gesetzlich vorgeschrieben oder soweit Dritte diese Daten im Auftrag von Google verarbeiten. Google wird in keinem Fall Ihre IP-Adresse mit anderen Daten der Google in Verbindung bringen. Das Speichern von Cookies auf Ihrer Festplatte und die Anzeige von Web Beacons können Sie verhindern, indem Sie in Ihren Browser-Einstellungen ''keine Cookies akzeptieren'' wählen (Im MS Internet-Explorer unter ''Extras > Internetoptionen > Datenschutz > Einstellung''; im Firefox unter ''Extras > Einstellungen > Datenschutz > Cookies''); wir weisen Sie jedoch darauf hin, dass Sie in diesem Fall gegebenenfalls nicht sämtliche Funktionen dieser Website voll umfänglich nutzen können. Durch die Nutzung dieser Website erklären Sie sich mit der Bearbeitung der über Sie erhobenen Daten durch Google in der zuvor beschriebenen Art und Weise und zu dem zuvor benannten Zweck einverstanden.\n                    <h3>Google Maps</h3>\n                    Diese Seite nutzt über eine API den Kartendienst Google Maps. Anbieter ist die Google Ireland Limited (“Google”), Gordon House, Barrow Street, Dublin 4, Irland.\n                    Zur Nutzung der Funktionen von Google Maps ist es notwendig, Ihre IP Adresse zu speichern. Diese Informationen werden in der Regel an einen Server von Google in den USA übertragen und dort gespeichert. Der Anbieter dieser Seite hat keinen Einfluss auf diese Datenübertragung.\n                    Die Nutzung von Google Maps erfolgt im Interesse einer ansprechenden Darstellung unserer Online-Angebote und an einer leichten Auffindbarkeit der von uns auf der Website angegebenen Orte. Dies stellt ein berechtigtes Interesse im Sinne von Art. 6 Abs. 1 lit. f DSGVO dar.\n                    Mehr Informationen zum Umgang mit Nutzerdaten finden Sie in der Datenschutzerklärung von Google: https://www.google.de/intl/de/policies/privacy \n                </FormattedHtml>\n            </Content>\n        </Page>\n    )\n}\n","import React from 'react'\nimport { Header } from '../components/Header'\nimport { Page } from '../components/Page'\nimport { Content } from '../components/Content'\nimport { FormattedHtml } from '../components/FormattedHtml'\nimport { GoBackButton } from '../components/GoBackButton'\nimport { useHistory } from 'react-router'\nimport { FooterContainer } from '../containers/FooterContainer'\nimport { H1Title } from '../components/H1Title'\n\nexport function DataPolicyPage() {\n    const history = useHistory()\n    return (\n        <Page>\n            <Header>\n                <GoBackButton onClick={() => history.push('/')} />\n            </Header>\n            <Content restrictMaxWidth scrollable>\n                <H1Title>Data Policy</H1Title>\n                <FormattedHtml>\n                    <h2>1. Datenschutz auf einen Blick</h2>\n                    <h3>Allgemeine Hinweise</h3>\n                    Die folgenden Hinweise geben einen einfachen Überblick\n                    darüber, was mit Ihren personenbezogenen Daten passiert,\n                    wenn Sie unsere Website besuchen. Personenbezogene Daten\n                    sind alle Daten, mit denen Sie persönlich identifiziert\n                    werden können. Ausführliche Informationen zum Thema\n                    Datenschutz entnehmen Sie unserer unter diesem Text\n                    aufgeführten Datenschutzerklärung.\n                    <h3>Datenerfassung auf unserer Website</h3>\n                    <h3>\n                        Wer ist verantwortlich für die Datenerfassung auf dieser\n                        Website?\n                    </h3>\n                    Die Datenverarbeitung auf dieser Website erfolgt durch den\n                    Websitebetreiber. Dessen Kontaktdaten können Sie dem\n                    Impressum dieser Website entnehmen.\n                    <h3>Wie erfassen wir Ihre Daten?</h3>\n                    Ihre Daten werden zum einen dadurch erhoben, dass Sie uns\n                    diese mitteilen. Hierbei kann es sich z.B. um Daten handeln,\n                    die Sie in ein Kontaktformular eingeben. Andere Daten werden\n                    automatisch beim Besuch der Website durch unsere IT-Systeme\n                    erfasst. Das sind vor allem technische Daten (z.B.\n                    Internetbrowser, Betriebssystem oder Uhrzeit des\n                    Seitenaufrufs). Die Erfassung dieser Daten erfolgt\n                    automatisch, sobald Sie unsere Website betreten.\n                    <h3>Wofür nutzen wir Ihre Daten?</h3>\n                    Ein Teil der Daten wird erhoben, um eine fehlerfreie\n                    Bereitstellung der Website zu gewährleisten. Andere Daten\n                    können zur Analyse Ihres Nutzerverhaltens verwendet werden.\n                    <h3>Welche Rechte haben Sie bezüglich Ihrer Daten?</h3>\n                    Sie haben jederzeit das Recht unentgeltlich Auskunft über\n                    Herkunft, Empfänger und Zweck Ihrer gespeicherten\n                    personenbezogenen Daten zu erhalten. Sie haben außerdem ein\n                    Recht, die Berichtigung, Sperrung oder Löschung dieser Daten\n                    zu verlangen. Hierzu sowie zu weiteren Fragen zum Thema\n                    Datenschutz können Sie sich jederzeit unter der im Impressum\n                    angegebenen Adresse an uns wenden. Des Weiteren steht Ihnen\n                    ein Beschwerderecht bei der zuständigen Aufsichtsbehörde zu.\n                    Außerdem haben Sie das Recht, unter bestimmten Umständen die\n                    Einschränkung der Verarbeitung Ihrer personenbezogenen Daten\n                    zu verlangen. Details hierzu entnehmen Sie der\n                    Datenschutzerklärung unter „Recht auf Einschränkung der\n                    Verarbeitung“.\n                    <h2>2. Allgemeine Hinweise und Pflichtinformationen</h2>\n                    <h3>Datenschutz</h3>\n                    Die Betreiber dieser Seiten nehmen den Schutz Ihrer\n                    persönlichen Daten sehr ernst. Wir behandeln Ihre\n                    personenbezogenen Daten vertraulich und entsprechend der\n                    gesetzlichen Datenschutzvorschriften sowie dieser\n                    Datenschutzerklärung. Wenn Sie diese Website benutzen,\n                    werden verschiedene personenbezogene Daten erhoben.\n                    Personenbezogene Daten sind Daten, mit denen Sie persönlich\n                    identifiziert werden können. Die vorliegende\n                    Datenschutzerklärung erläutert, welche Daten wir erheben und\n                    wofür wir sie nutzen. Sie erläutert auch, wie und zu welchem\n                    Zweck das geschieht. Wir weisen darauf hin, dass die\n                    Datenübertragung im Internet (z.B. bei der Kommunikation per\n                    E-Mail) Sicherheitslücken aufweisen kann. Ein lückenloser\n                    Schutz der Daten vor dem Zugriff durch Dritte ist nicht\n                    möglich.\n                    <h3>Hinweis zur verantwortlichen Stelle</h3>\n                    Die verantwortliche Stelle für die Datenverarbeitung auf\n                    dieser Website ist:\n                    <br />\n                    Falco Huhold\n                    <br />\n                    Kreuzsur. 3<br />\n                    01067 Dresden\n                    <br />\n                    Telefon: +49 (0) 172 42 77 0 88\n                    <br />\n                    E-Mail: f.huhold@online.de\n                    <br />\n                    <br />\n                    Verantwortliche Stelle ist die natürliche oder juristische\n                    Person, die allein oder gemeinsam mit anderen über die\n                    Zwecke und Mittel der Verarbeitung von personenbezogenen\n                    Daten (z.B. Namen, E-Mail-Adressen o. Ä.) entscheidet.\n                    <h3>Widerruf Ihrer Einwilligung zur Datenverarbeitung</h3>\n                    Viele Datenverarbeitungsvorgänge sind nur mit Ihrer\n                    ausdrücklichen Einwilligung möglich. Sie können eine bereits\n                    erteilte Einwilligung jederzeit widerrufen. Dazu reicht eine\n                    formlose Mitteilung per E-Mail an uns. Die Rechtmäßigkeit\n                    der bis zum Widerruf erfolgten Datenverarbeitung bleibt vom\n                    Widerruf unberührt. Widerspruchsrecht gegen die\n                    Datenerhebung in besonderen Fällen sowie gegen Direktwerbung\n                    (Art. 21 DSGVO) Wenn die Datenverarbeitung auf Grundlage von\n                    Art. 6 Abs. 1 lit. e oder f DSGVO erfolgt, haben Sie\n                    jederzeit das Recht, aus Gründen, die sich aus Ihrer\n                    besonderen Situation ergeben, gegen die Verarbeitung Ihrer\n                    personenbezogenen Daten Widerspruch einzulegen; dies gilt\n                    auch für ein auf diese Bestimmungen gestütztes Profiling.\n                    Die jeweilige Rechtsgrundlage, auf denen eine Verarbeitung\n                    beruht, entnehmen Sie dieser Datenschutzerklärung. Wenn Sie\n                    Widerspruch einlegen, werden wir Ihre betroffenen\n                    personenbezogenen Daten nicht mehr verarbeiten, es sei denn,\n                    wir können zwingende schutzwürdige Gründe für die\n                    Verarbeitung nachweisen, die Ihre Interessen, Rechte und\n                    Freiheiten überwiegen oder die Verarbeitung dient der\n                    Geltendmachung, Ausübung oder Verteidigung von\n                    Rechtsansprüchen (Widerspruch nach Art. 21 Abs. 1 DSGVO).\n                    Werden Ihre personenbezogenen Daten verarbeitet, um\n                    Direktwerbung zu betreiben, so haben Sie das Recht,\n                    jederzeit Widerspruch gegen die Verarbeitung Sie\n                    betreffender personenbezogener Daten zum Zwecke derartiger\n                    Werbung einzulegen; dies gilt auch für das Profiling, soweit\n                    es mit solcher Direktwerbung in Verbindung steht. Wenn Sie\n                    widersprechen, werden Ihre personenbezogenen Daten\n                    anschließend nicht mehr zum Zwecke der Direktwerbung\n                    verwendet (Widerspruch nach Art. 21 Abs. 2 DSGVO).\n                    <h3>\n                        Beschwerderecht bei der zuständigen Aufsichtsbehörde\n                    </h3>\n                    Im Falle von Verstößen gegen die DSGVO steht den Betroffenen\n                    ein Beschwerderecht bei einer Aufsichtsbehörde, insbesondere\n                    in dem Mitgliedstaat ihres gewöhnlichen Aufenthalts, ihres\n                    Arbeitsplatzes oder des Orts des mutmaßlichen Verstoßes zu.\n                    Das Beschwerderecht besteht unbeschadet anderweitiger\n                    verwaltungsrechtlicher oder gerichtlicher Rechtsbehelfe.\n                    <h3>Recht auf Datenübertragbarkeit</h3>\n                    Sie haben das Recht, Daten, die wir auf Grundlage Ihrer\n                    Einwilligung oder in Erfüllung eines Vertrags automatisiert\n                    verarbeiten, an sich oder an einen Dritten in einem\n                    gängigen, maschinenlesbaren Format aushändigen zu lassen.\n                    Sofern Sie die direkte Übertragung der Daten an einen\n                    anderen Verantwortlichen verlangen, erfolgt dies nur, soweit\n                    es technisch machbar ist.\n                    <h3>SSL- bzw. TLS-Verschlüsselung</h3>\n                    Diese Seite nutzt aus Sicherheitsgründen und zum Schutz der\n                    Übertragung vertraulicher Inhalte, wie zumBeispiel\n                    Bestellungen oder Anfragen, die Sie an uns als\n                    Seitenbetreiber senden, eine SSL-bzw. TLS- Verschlüsselung.\n                    Eine verschlüsselte Verbindung erkennen Sie daran, dass die\n                    Adresszeile des Browsers von “http://” auf “https://”\n                    wechselt und an dem Schloss-Symbol in Ihrer Browserzeile.\n                    Wenn die SSL- bzw. TLS-Verschlüsselung aktiviert ist, können\n                    die Daten, die Sie an uns übermitteln, nicht von Dritten\n                    mitgelesen werden.\n                    <h3>Auskunft, Sperrung, Löschung und Berichtigung</h3>\n                    Sie haben im Rahmen der geltenden gesetzlichen Bestimmungen\n                    jederzeit das Recht auf unentgeltliche Auskunft über Ihre\n                    gespeicherten personenbezogenen Daten, deren Herkunft und\n                    Empfänger und den Zweck der Datenverarbeitung und ggf. ein\n                    Recht auf Berichtigung, Sperrung oder Löschung dieser Daten.\n                    Hierzu sowie zu weiteren Fragen zum Thema personenbezogene\n                    Daten können Sie sich jederzeit unter der im Impressum\n                    angegebenen Adresse an uns wenden.\n                    <h3>Recht auf Einschränkung der Verarbeitung</h3>\n                    Sie haben das Recht, die Einschränkung der Verarbeitung\n                    Ihrer personenbezogenen Daten zu verlangen. Hierzu können\n                    Sie sich jederzeit unter der im Impressum angegebenen\n                    Adresse an uns wenden. Das Recht auf Einschränkung der\n                    Verarbeitung besteht in folgenden Fällen: Wenn Sie die\n                    Richtigkeit Ihrer bei uns gespeicherten personenbezogenen\n                    Daten bestreiten, benötigen wir in der Regel Zeit, um dies\n                    zu überprüfen. Für die Dauer der Prüfung haben Sie das\n                    Recht, die Einschränkung der Verarbeitung Ihrer\n                    personenbezogenen Daten zu verlangen. Wenn die Verarbeitung\n                    Ihrer personenbezogenen Daten unrechtmäßig geschah /\n                    geschieht, können Sie statt der Löschung die Einschränkung\n                    der Datenverarbeitung verlangen. Wenn wir Ihre\n                    personenbezogenen Daten nicht mehr benötigen, Sie sie jedoch\n                    zur Ausübung, Verteidigung oder Geltendmachung von\n                    Rechtsansprüchen benötigen, haben Sie das Recht, statt der\n                    Löschung die Einschränkung der Verarbeitung Ihrer\n                    personenbezogenen Daten zu verlangen. Wenn Sie einen\n                    Widerspruch nach Art. 21 Abs. 1 DSGVO eingelegt haben, muss\n                    eine Abwägung zwischen Ihren und unseren Interessen\n                    vorgenommen werden. Solange noch nicht feststeht, wessen\n                    Interessen überwiegen, haben Sie das Recht, die\n                    Einschränkung der Verarbeitung Ihrer personenbezogenen Daten\n                    zu verlangen. Wenn Sie die Verarbeitung Ihrer\n                    personenbezogenen Daten eingeschränkt haben, dürfen diese\n                    Daten – von ihrer Speicherung abgesehen – nur mit Ihrer\n                    Einwilligung oder zur Geltendmachung, Ausübung oder\n                    Verteidigung von Rechtsansprüchen oder zum Schutz der Rechte\n                    einer anderen natürlichen oder juristischen Person oder aus\n                    Gründen eines wichtigen öffentlichen Interesses der\n                    Europäischen Union oder eines Mitgliedstaats verarbeitet\n                    werden.\n                    <h2>3. Datenerfassung auf unserer Website</h2>\n                    Anfrage per E-Mail, Telefon oder Telefax Wenn Sie uns per\n                    E-Mail, Telefon oder Telefax kontaktieren, wird Ihre Anfrage\n                    inklusive aller daraus hervorgehenden personenbezogenen\n                    Daten (Name, Anfrage) zum Zwecke der Bearbeitung Ihres\n                    Anliegens bei uns gespeichert und verarbeitet. Diese Daten\n                    geben wir nicht ohne Ihre Einwilligung weiter. Die\n                    Verarbeitung dieser Daten erfolgt auf Grundlage von Art. 6\n                    Abs. 1 lit. b DSGVO, sofern Ihre Anfrage mit der Erfüllung\n                    eines Vertrags zusammenhängt oder zur Durchführung\n                    vorvertraglicher Maßnahmen erforderlich ist. In allen\n                    übrigen Fällen beruht die Verarbeitung auf Ihrer\n                    Einwilligung (Art. 6 Abs. 1 lit. a DSGVO) und / oder auf\n                    unseren berechtigten Interessen (Art. 6 Abs. 1 lit. f\n                    DSGVO), da wir ein berechtigtes Interesse an der effektiven\n                    Bearbeitung der an uns gerichteten Anfragen haben. Die von\n                    Ihnen an uns per Kontaktanfragen übersandten Daten\n                    verbleiben bei uns, bis Sie uns zur Löschung auffordern,\n                    Ihre Einwilligung zur Speicherung widerrufen oder der Zweck\n                    für die Datenspeicherung entfällt (z. B. nach\n                    abgeschlossener Bearbeitung Ihres Anliegens). Zwingende\n                    gesetzliche Bestimmungen – insbesondere gesetzliche\n                    Aufbewahrungsfristen – bleiben unberührt.\n                    <h2>4. Newsletter</h2>\n                    <h3>Newsletterdaten</h3>\n                    Wenn Sie den auf der Website angebotenen Newsletter beziehen\n                    möchten, benötigen wir von Ihnen eine E- Mail-Adresse sowie\n                    Informationen, welche uns die Überprüfung gestatten, dass\n                    Sie der Inhaber der angegebenen E-Mail-Adresse sind und mit\n                    dem Empfang des Newsletters einverstanden sind. Weitere\n                    Daten werden nicht bzw. nur auf freiwilliger Basis erhoben.\n                    Diese Daten verwenden wir ausschließlich für den Versand der\n                    angeforderten Informationen und geben diese nicht an Dritte\n                    weiter. Die Verarbeitung der in das\n                    Newsletteranmeldeformular eingegebenen Daten erfolgt\n                    ausschließlich auf Grundlage Ihrer Einwilligung (Art. 6 Abs.\n                    1 lit. a DSGVO). Die erteilte Einwilligung zur Speicherung\n                    der Daten, der E-Mail-Adresse sowie deren Nutzung zum\n                    Versand des Newsletters können Sie jederzeit widerrufen,\n                    etwa über den \"Austragen\"-Link im Newsletter. Die\n                    Rechtmäßigkeit der bereits erfolgten\n                    Datenverarbeitungsvorgänge bleibt vom Widerruf unberührt.\n                    Die von Ihnen zum Zwecke des Newsletter-Bezugs bei uns\n                    hinterlegten Daten werden von uns bis zu Ihrer Austragung\n                    aus dem Newsletter gespeichert und nach der Abbestellung des\n                    Newsletters gelöscht. Daten, die zu anderen Zwecken bei uns\n                    gespeichert wurden bleiben hiervon unberührt.\n                    <h2>5. Plugins und Tools</h2>\n                    TBA\n                    <br />\n                    <br />\n                    Quelle: e-recht24.de\n                </FormattedHtml>\n            </Content>\n        </Page>\n    )\n}\n","import React from 'react'\nimport { Page } from '../components/Page'\nimport { Header } from '../components/Header'\nimport { Content } from '../components/Content'\nimport { FooterContainer } from '../containers/FooterContainer'\nimport { GoBackButton } from '../components/GoBackButton'\nimport { useHistory } from 'react-router'\nimport { H1Title } from '../components/H1Title'\n\nexport function ContactPage() {\n    const history = useHistory()\n    return (\n        <Page>\n            <Header>\n                <GoBackButton onClick={() => history.push('/')} />\n            </Header>\n            <Content restrictMaxWidth scrollable>\n                <H1Title>Contact</H1Title>\n                ...\n            </Content>\n        </Page>\n    )\n}\n","import ApolloClient from 'apollo-boost'\n\nexport type Club = {\n    id: number\n    name: string\n    address?: string\n    region?: string\n    contact?: string\n    email?: string\n    specials?: string\n    description?: string\n    link?: string\n}\n\nexport type Genre = {\n    id: number\n    name: string\n}\n\nexport type Event = {\n    admissionFee: number | undefined\n    admissionFeeWithDiscount: number | undefined\n    amountOfFloors: number | undefined\n    club: Club\n    date: string\n    description: string\n    genres: Genre[] | undefined\n    id: number\n    imageUrl: string\n    minimumAge: number | undefined\n    name: string\n    priceCategory: 1 | 2 | 3 | undefined\n    special: string | undefined\n}\n\nexport const apolloClient = new ApolloClient()","import React from 'react'\nimport { Page } from '../components/Page'\nimport { Header } from '../components/Header'\nimport { Content } from '../components/Content'\nimport { FooterContainer } from '../containers/FooterContainer'\nimport { useParams, useHistory } from 'react-router'\nimport gql from 'graphql-tag'\nimport { Club } from '../api'\nimport { useQuery } from '@apollo/react-hooks'\nimport { GoBackButton } from '../components/GoBackButton'\nimport { FormattedHtml } from '../components/FormattedHtml'\nimport { H1Title } from '../components/H1Title'\nimport { KeyValueField } from '../components/KeyValueField'\nimport { KeyValueFields } from '../components/KeyValueFields'\n\ntype Props = {}\n\ntype Params = {\n    clubId: string\n}\n\nconst CLUB_QUERY = gql`\n    query clubQuery($clubId: Int!) {\n        club(id: $clubId) {\n            id\n            name\n            address\n            region\n            contact\n            email\n            specials\n            description\n            link\n        }\n    }\n`\ntype ClubQueryData = {\n    club: Pick<\n        Club,\n        | 'id'\n        | 'name'\n        | 'address'\n        | 'region'\n        | 'contact'\n        | 'email'\n        | 'specials'\n        | 'description'\n        | 'link'\n    >\n}\n\nexport function ClubDetailPage(props: Props) {\n    const params = useParams<Params>()\n    const { clubId } = params\n    const clubQueryResult = useQuery<ClubQueryData>(CLUB_QUERY, {\n        variables: { clubId: parseInt(clubId, 10) },\n    })\n    const history = useHistory()\n    const club = clubQueryResult.data && clubQueryResult.data.club\n\n    return (\n        <Page>\n            <Header>\n                <GoBackButton onClick={() => history.push('/')} />\n            </Header>\n            <Content restrictMaxWidth scrollable>\n                {club ? (\n                    <>\n                        <H1Title>{club.name}</H1Title>\n                        <KeyValueFields>\n                            <KeyValueField\n                                fieldKey=\"Adress\"\n                                fieldValue={club.address}\n                            />\n                            <KeyValueField\n                                fieldKey=\"Region\"\n                                fieldValue={club.region}\n                            />\n                            <KeyValueField\n                                fieldKey=\"Contact\"\n                                fieldValue={club.contact}\n                            />\n                            <KeyValueField\n                                fieldKey=\"Email\"\n                                fieldValue={club.email}\n                            />\n                            <KeyValueField\n                                fieldKey=\"Specials\"\n                                fieldValue={club.specials}\n                            />\n                            <KeyValueField\n                                fieldKey=\"Link\"\n                                fieldValue={club.link}\n                            />\n                        </KeyValueFields>\n                        <FormattedHtml>{club.description}</FormattedHtml>\n                    </>\n                ) : (\n                    'Loading...'\n                )}\n            </Content>\n        </Page>\n    )\n}\n","import './Button.scss'\nimport React from 'react'\nimport classNames from 'classnames'\nimport { ComponentProps } from 'react'\n\ntype Props = ComponentProps<'button'> & {\n    primary?: boolean\n    secondary?: boolean\n    danger?: boolean\n    borderless?: boolean\n}\n\nconst cn = 'button'\n\nexport function Button(props: Props) {\n    const {\n        className,\n        primary,\n        secondary,\n        danger,\n        borderless,\n        ...restProps\n    } = props\n    return (\n        <button\n            {...restProps}\n            className={classNames(cn, className, {\n                [`${cn}--primary`]: primary,\n                [`${cn}--secondary`]: secondary,\n                [`${cn}--danger`]: danger,\n                [`${cn}--borderless`]: borderless,\n            })}\n        />\n    )\n}\n","import './EditableEntity.scss'\nimport React, { ReactNode } from 'react'\nimport { Button } from './Button'\nimport { Icon } from './Icon'\n\ntype Props = {\n    onEdit?: (() => void) | undefined\n    onDelete?: (() => void) | undefined\n    children: ReactNode\n}\n\nconst cn = 'editable-entity'\n\nexport function EditableEntity(props: Props) {\n    const { onEdit, onDelete, children } = props\n    return (\n        <div className={cn}>\n            <div className={`${cn}__entity-actions`}>\n                <Button onClick={onEdit} disabled={!onEdit} secondary>\n                    <Icon icon=\"pen\"/>\n                </Button>\n                <Button onClick={onDelete} disabled={!onDelete} danger>\n                    <Icon icon=\"trash-alt\" />\n                </Button>\n            </div>\n            <div className={`${cn}__entity-name`}>{children}</div>\n        </div>\n    )\n}\n","import * as R from 'ramda'\nimport './AdminPage.scss'\nimport React from 'react'\nimport { Page } from '../components/Page'\nimport { Content } from '../components/Content'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { Event } from '../api'\nimport { EditableEntity } from '../components/EditableEntity'\nimport { LoadingIndicator } from '../components/LoadingIndicator'\nimport { useHistory } from 'react-router'\nimport { useClubs, CLUBS_QUERY } from '../containers/useClubs'\nimport { Button } from '../components/Button'\nimport { H1Title } from '../components/H1Title'\nimport { Icon } from '../components/Icon'\n\nconst cn = 'admin-page'\n\n// TODO: permission system!\n\nconst EVENTS_QUERY = gql`\n    query AdminEventsQuery {\n        events {\n            id\n            name\n        }\n    }\n`\n\nconst DELETE_EVENT_MUTATION = gql`\n    mutation AdminDeleteEvent($id: Int!) {\n        deleteEvent(id: $id) {\n            id\n        }\n    }\n`\n\nconst DELETE_CLUB_MUTATION = gql`\n    mutation AdminDeleteClub($id: Int!) {\n        deleteClub(id: $id) {\n            id\n        }\n    }\n`\n\nexport function AdminPage() {\n    const clubs = R.sortBy(R.prop('name'), useClubs()[0] || [])\n    const eventsQueryResult = useQuery<{ events: Event[] }>(EVENTS_QUERY)\n    const events =\n        eventsQueryResult.data &&\n        R.sortBy(R.prop('name'), eventsQueryResult.data.events)\n    const [deleteEventMutation] = useMutation(DELETE_EVENT_MUTATION)\n    const [deleteClubMutation] = useMutation(DELETE_CLUB_MUTATION)\n    const history = useHistory()\n\n    function deleteEvent(id: number) {\n        const isSure = window.confirm('Sure?')\n        if (!isSure) return\n        deleteEventMutation({\n            variables: { id },\n            refetchQueries: [{ query: EVENTS_QUERY }],\n        })\n    }\n\n    function deleteClub(id: number) {\n        const isSure = window.confirm('Sure?')\n        if (!isSure) return\n        deleteClubMutation({\n            variables: { id },\n            refetchQueries: [{ query: CLUBS_QUERY }],\n        })\n    }\n\n    return (\n        <Page>\n            <div className={cn}>\n                <H1Title>Administration</H1Title>\n                <div className={`${cn}__content`}>\n                    <div className={`${cn}__column`}>\n                        <div className={`${cn}__column-header`}>\n                            <h2>Clubs</h2>\n                            <Button\n                                borderless\n                                secondary\n                                onClick={() => history.push('/admin/add-club')}\n                            >\n                                <Icon icon=\"plus\" />\n                            </Button>\n                        </div>\n                        <div className={`${cn}__column-content`}>\n                            {clubs ? (\n                                clubs.map(c => (\n                                    <EditableEntity\n                                        key={c.id}\n                                        onDelete={() => deleteClub(c.id)}\n                                        onEdit={() =>\n                                            history.push(`/admin/club/${c.id}`)\n                                        }\n                                    >\n                                        {c.name}\n                                    </EditableEntity>\n                                ))\n                            ) : (\n                                <LoadingIndicator />\n                            )}\n                        </div>\n                    </div>\n                    <div className={`${cn}__column`}>\n                        <div className={`${cn}__column-header`}>\n                            <h2>Events</h2>\n                            <Button\n                                onClick={() => history.push('/admin/add-event')}\n                                secondary\n                                borderless\n                            >\n                                <Icon icon=\"plus\" />\n                            </Button>\n                        </div>\n                        <div className={`${cn}__column-content`}>\n                            {events ? (\n                                events.map(e => (\n                                    <EditableEntity\n                                        key={e.id}\n                                        onDelete={() => deleteEvent(e.id)}\n                                        onEdit={() =>\n                                            history.push(`/admin/event/${e.id}`)\n                                        }\n                                    >\n                                        {e.name}\n                                    </EditableEntity>\n                                ))\n                            ) : (\n                                <LoadingIndicator />\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Page>\n    )\n}\n","import './LabeledInput.scss'\nimport React from 'react'\nimport { ReactNode } from 'react'\n\ntype Props = {\n    label: string\n    children: ReactNode\n}\n\nconst cn = 'labeled-input'\n\nexport function LabeledInput(props: Props) {\n    const { label, children } = props\n    return (\n        <div className={cn}>\n            <label>{label}</label>\n            {children}\n        </div>\n    )\n}\n","import './Input.scss'\nimport classNames from 'classnames'\nimport React, { ComponentProps } from 'react'\n\ntype Props = ComponentProps<'input'> & { width?: number | string }\n\nconst cn = 'input'\n\nexport function Input(props: Props) {\n    const { style, className, width = props.type === 'checkbox' ? '2em' : '15em' } = props\n    return (\n        <input\n            {...props}\n            className={classNames(cn, className)}\n            style={{ ...style, width }}\n        />\n    )\n}\n","import './Textarea.scss'\nimport classNames from 'classnames'\nimport React, { ComponentProps } from 'react'\n\ntype Props = ComponentProps<'textarea'> & { width?: number | string }\n\nconst cn = 'textarea'\n\nexport function Textarea(props: Props) {\n    const { className, width, style } = props\n    return (\n        <textarea\n            {...props}\n            className={classNames(cn, className)}\n            style={{ ...style, width }}\n        />\n    )\n}\n","import classNames from 'classnames'\nimport React from 'react'\nimport { ComponentProps } from 'react'\nimport './Select.scss'\n\ntype Props = ComponentProps<'select'> & { width?: number | string }\n\nconst cn = 'select'\n\nexport function Select(props: Props) {\n    const { className, width = '15em', style } = props\n    return (\n        <select\n            {...props}\n            className={classNames(cn, className)}\n            style={{ ...style, width }}\n        />\n    )\n}\n","import './Option.scss'\nimport classNames from 'classnames'\nimport React, { ComponentProps } from 'react';\n\ntype Props = ComponentProps<'option'>\n\nconst cn = 'option'\n\nexport function Option(props: Props) {\n    const { className } = props;\n    return (\n        <option {...props} className={classNames(cn, className)} />\n    )\n}","import './EventEditor.scss'\nimport React from 'react'\nimport { Calendar } from './Calendar'\nimport moment, { Moment } from 'moment'\nimport { LabeledInput } from './LabeledInput'\nimport { Input } from './Input'\nimport { Textarea } from './Textarea'\nimport { Select } from './Select'\nimport { Option } from './Option'\n\nexport type EventEditorState = {\n    admissionFee?: number\n    admissionFeeWithDiscount?: number\n    amountOfFloors?: number\n    club?: {\n        id: number\n        name: string\n    }\n    date?: string\n    description?: string\n    genres?: {\n        id: number\n        name: string\n    }[]\n    id?: number\n    minimumAge?: number\n    name?: string\n    priceCategory?: 1 | 2 | 3\n    special?: string\n}\n\n// TODO: image\n\ntype Props = {\n    state: EventEditorState\n    setState: (state: EventEditorState) => void\n    monthSelection: Moment\n    setMonthSelection: (monthSelection: Moment) => void\n    clubs: {\n        id: number\n        name: string\n    }[]\n    genres: {\n        id: number\n        name: string\n    }[]\n}\n\nconst cn = 'event-editor'\n\nexport function EventEditor(props: Props) {\n    const {\n        state,\n        setState,\n        monthSelection,\n        clubs,\n        genres,\n        setMonthSelection,\n    } = props\n    return (\n        <div className={cn}>\n            <LabeledInput label=\"Name\">\n                <Input\n                    placeholder=\"name\"\n                    value={state.name || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            name: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Date\">\n                <div className={`${cn}__calendar-wrapper`}>\n                    <Calendar\n                        monthSelection={monthSelection}\n                        setMonthSelection={setMonthSelection}\n                        selectedDate={\n                            state.date ? moment(state.date) : undefined\n                        }\n                        setSelectedDate={date =>\n                            setState({\n                                ...state,\n                                date: date.toISOString(),\n                            })\n                        }\n                    />\n                </div>\n            </LabeledInput>\n            <LabeledInput label=\"Club\">\n                <Select\n                    value={state.club ? state.club.id : ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            club: clubs.find(\n                                c => c.id === parseInt(e.target.value, 10)\n                            ),\n                        })\n                    }\n                >\n                    <Option disabled value=\"\">\n                        --select--\n                    </Option>\n                    {clubs.map(c => (\n                        <Option value={c.id}>{c.name}</Option>\n                    ))}\n                </Select>\n            </LabeledInput>\n            <LabeledInput label=\"Admission Fee\">\n                <Input\n                    value={state.admissionFee || ''}\n                    min={0}\n                    type=\"number\"\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            admissionFee: parseFloat(e.target.value),\n                        })\n                    }\n                    step={0.01}\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Admission Fee With Discount\">\n                <Input\n                    value={state.admissionFeeWithDiscount || ''}\n                    min={0}\n                    type=\"number\"\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            admissionFeeWithDiscount: parseFloat(\n                                e.target.value\n                            ),\n                        })\n                    }\n                    step={0.01}\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Amount of Floors\">\n                <Input\n                    value={state.amountOfFloors || ''}\n                    min={0}\n                    type=\"number\"\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            amountOfFloors: parseInt(e.target.value, 10),\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Description\">\n                <Textarea\n                    width=\"20em\"\n                    value={state.description || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            description: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Special\">\n                <Textarea\n                    width=\"20em\"\n                    value={state.special || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            special: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Minimum Age\">\n                <Input\n                    value={state.minimumAge || ''}\n                    min={0}\n                    type=\"number\"\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            minimumAge: parseInt(e.target.value, 10),\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Price Category\">\n                <Input\n                    value={state.priceCategory || ''}\n                    min={0}\n                    max={3}\n                    type=\"number\"\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            priceCategory: parseInt(e.target.value, 10) as (\n                                | 1\n                                | 2\n                                | 3),\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Genres\">\n                <div>\n                    {genres.map(g => (\n                        <div>\n                            <Input\n                                name={g.name}\n                                type=\"checkbox\"\n                                checked={\n                                    state.genres\n                                        ? state.genres.some(\n                                              g2 => g2.id === g.id\n                                          )\n                                        : false\n                                }\n                                onChange={e => {\n                                    const genres = state.genres || []\n                                    if (e.target.checked) {\n                                        setState({\n                                            ...state,\n                                            genres: [...genres, g],\n                                        })\n                                    } else {\n                                        setState({\n                                            ...state,\n                                            genres: genres.filter(\n                                                g2 => g2.id !== g.id\n                                            ),\n                                        })\n                                    }\n                                }}\n                            />\n                            {g.name}\n                        </div>\n                    ))}\n                </div>\n            </LabeledInput>\n        </div>\n    )\n}\n","import gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst QUERY = gql`\n    {\n        genres {\n            id\n            name\n        }\n    }\n`\n\ntype QueryResult = {\n    genres: {\n        id: number\n        name: string\n    }[]\n}\n\nexport function useGenres() {\n    const queryResult = useQuery<QueryResult>(QUERY)\n    const genres = queryResult.data && queryResult.data.genres\n    return [genres, queryResult] as const\n}","import './Spacer.scss'\nimport classNames from 'classnames'\nimport React, { ComponentProps } from 'react';\n\ntype Props = ComponentProps<'div'>\n\nconst cn = 'spacer'\n\nexport function Spacer(props: Props) {\n    return <div {...props} className={classNames(cn, props.className)} />\n}","import React, { useState } from 'react'\nimport { Page } from '../components/Page'\nimport { Content } from '../components/Content'\nimport { EventEditorState, EventEditor } from '../components/EventEditor'\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks'\nimport { useHistory } from 'react-router'\nimport moment from 'moment'\nimport { useGenres } from '../containers/useGenres'\nimport { useClubs } from '../containers/useClubs'\nimport { Button } from '../components/Button'\nimport { H1Title } from '../components/H1Title'\nimport { Spacer } from '../components/Spacer'\n\nconst CREATE_EVENT_MUTATION = gql`\n    mutation CreateEvent($input: CreateEventInput!) {\n        createEvent(input: $input) {\n            event {\n                id\n            }\n        }\n    }\n`\n\nexport function AdminAddEventPage() {\n    const [monthSelection, setMonthSelection] = useState(moment())\n    const genres = useGenres()[0] || []\n    const clubs = useClubs()[0] || []\n    const [eventEditorState, setEventEditorState] = useState<EventEditorState>(\n        {}\n    )\n    const [createEventMutation] = useMutation(CREATE_EVENT_MUTATION, {\n        variables: {\n            input: {\n                admissionFee: eventEditorState.admissionFee,\n                admissionFeeWithDiscount:\n                    eventEditorState.admissionFeeWithDiscount,\n                amountOfFloors: eventEditorState.amountOfFloors,\n                id: eventEditorState.id,\n                clubId: eventEditorState.club && eventEditorState.club.id,\n                date: eventEditorState.date,\n                description: eventEditorState.description,\n                genreIds: eventEditorState.genres\n                    ? eventEditorState.genres.map(g => g.id)\n                    : undefined,\n                minimumAge: eventEditorState.minimumAge,\n                name: eventEditorState.name,\n                priceCategory: eventEditorState.priceCategory,\n                special: eventEditorState.special,\n            },\n        },\n    })\n\n    const canCreate =\n        eventEditorState.name && eventEditorState.club && eventEditorState.date\n    const history = useHistory()\n\n    const createEvent = async () => {\n        const createEventMutationResult = await createEventMutation()\n        const eventId = createEventMutationResult.data.createEvent.event.id\n        history.push(`/event/${eventId}`)\n    }\n    return (\n        <Page>\n            <Content restrictMaxWidth scrollable>\n                <H1Title>\n                    Create Event\n                </H1Title>\n                <EventEditor\n                    monthSelection={monthSelection}\n                    setMonthSelection={setMonthSelection}\n                    genres={genres}\n                    clubs={clubs}\n                    state={eventEditorState}\n                    setState={setEventEditorState}\n                />\n                <Spacer />\n                <Button primary disabled={!canCreate} onClick={createEvent}>\n                    Create\n                </Button>\n                <Button secondary onClick={() => history.push('/admin')}>\n                    Cancel\n                </Button>\n                <Spacer />\n            </Content>\n        </Page>\n    )\n}\n","import gql from 'graphql-tag'\nimport { Event, Club, Genre } from './api'\n\nexport const eventDetailsFragment = gql`\n    fragment EventDetails on Event {\n        admissionFee\n        admissionFeeWithDiscount\n        amountOfFloors\n        club {\n            id\n            name\n        }\n        date\n        description\n        genres {\n            id\n            name\n        }\n        id\n        imageUrl\n        minimumAge\n        name\n        priceCategory\n        special\n    }\n`\n\nexport type EventDetailsEvent = Pick<\n    Event,\n    | 'admissionFee'\n    | 'admissionFeeWithDiscount'\n    | 'amountOfFloors'\n    | 'date'\n    | 'description'\n    | 'id'\n    | 'imageUrl'\n    | 'minimumAge'\n    | 'name'\n    | 'priceCategory'\n    | 'special'\n> & {\n    club: Pick<Club, 'id' | 'name'>\n    genres: Pick<Genre, 'id' | 'name'>[]\n}\n","import React, { useState, useEffect } from 'react'\nimport gql from 'graphql-tag'\nimport { eventDetailsFragment, EventDetailsEvent } from '../graphqlUtils'\nimport { useParams, useHistory } from 'react-router'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport { LoadingIndicator } from '../components/LoadingIndicator'\nimport { EventEditorState, EventEditor } from '../components/EventEditor'\nimport { Page } from '../components/Page'\nimport { Content } from '../components/Content'\nimport moment from 'moment'\nimport { useGenres } from '../containers/useGenres'\nimport { useClubs } from '../containers/useClubs'\nimport { Button } from '../components/Button'\nimport { H1Title } from '../components/H1Title'\nimport { Spacer } from '../components/Spacer'\n\ntype Params = {\n    eventId: string\n}\n\n// TODO: store entities in state, transform to id when doing mutation\n\nconst EVENT_QUERY = gql`\n    query eventQuery($eventId: Int!) {\n        event(id: $eventId) {\n            ...EventDetails\n        }\n    }\n    ${eventDetailsFragment}\n`\ntype QueryData = { event: EventDetailsEvent }\n\nconst UPDATE_EVENT_MUTATION = gql`\n    mutation UpdateEvent($input: UpdateEventInput!) {\n        updateEvent(input: $input) {\n            event {\n                ...EventDetails\n            }\n        }\n    }\n    ${eventDetailsFragment}\n`\n\nexport function AdminUpdateEventPage(props: any) {\n    const params = useParams<Params>()\n    const { eventId } = params\n    const [monthSelection, setMonthSelection] = useState(moment())\n    const genres = useGenres()[0] || []\n    const clubs = useClubs()[0] || []\n    const eventQueryResult = useQuery<QueryData>(EVENT_QUERY, {\n        variables: { eventId: parseInt(eventId, 10) },\n    })\n    const [eventEditorState, setEventEditorState] = useState<EventEditorState>(\n        {}\n    )\n    const [updateEventMutation] = useMutation(UPDATE_EVENT_MUTATION, {\n        variables: {\n            input: {\n                admissionFee: eventEditorState.admissionFee,\n                admissionFeeWithDiscount:\n                    eventEditorState.admissionFeeWithDiscount,\n                amountOfFloors: eventEditorState.amountOfFloors,\n                id: eventEditorState.id,\n                clubId: eventEditorState.club && eventEditorState.club.id,\n                date: eventEditorState.date,\n                description: eventEditorState.description,\n                genreIds: eventEditorState.genres\n                    ? eventEditorState.genres.map(g => g.id)\n                    : undefined,\n                minimumAge: eventEditorState.minimumAge,\n                name: eventEditorState.name,\n                priceCategory: eventEditorState.priceCategory,\n                special: eventEditorState.special,\n            },\n        },\n    })\n    const history = useHistory()\n    const event = eventQueryResult.data && eventQueryResult.data.event\n    useEffect(() => {\n        if (!event) return\n        setEventEditorState(event)\n    }, [event])\n\n    if (!event) return <LoadingIndicator />\n\n    const updateEvent = async () => {\n        await updateEventMutation()\n        history.push(`/event/${eventId}`)\n    }\n\n    const canSave =\n        eventEditorState.name &&\n        eventEditorState.club &&\n        eventEditorState.date &&\n        eventEditorState.id\n\n    return (\n        <Page>\n            <Content restrictMaxWidth scrollable>\n                <H1Title>Edit Event</H1Title>\n                <EventEditor\n                    clubs={clubs}\n                    genres={genres}\n                    monthSelection={monthSelection}\n                    setMonthSelection={setMonthSelection}\n                    state={eventEditorState}\n                    setState={setEventEditorState}\n                />\n                <Spacer />\n                <Button primary disabled={!canSave} onClick={updateEvent}>\n                    Save\n                </Button>\n                <Button secondary onClick={() => history.push('/admin')}>\n                    Cancel\n                </Button>\n                <Spacer />\n            </Content>\n        </Page>\n    )\n}\n","import React from 'react'\nimport './ClubEditor.scss'\nimport { LabeledInput } from './LabeledInput'\nimport { Input } from './Input'\nimport { Textarea } from './Textarea'\n\nexport type ClubEditorState = {\n    address?: string\n    contact?: string\n    description?: string\n    email?: string\n    id?: number\n    link?: string\n    name?: string\n    region?: string\n    specials?: string\n}\n\ntype Props = {\n    state: ClubEditorState\n    setState(state: ClubEditorState): void\n}\n\nconst cn = 'club-editor'\n\nexport function ClubEditor(props: Props) {\n    const { state, setState } = props\n    return (\n        <div className={cn}>\n            <LabeledInput label=\"Name\">\n                <Input\n                    placeholder=\"name\"\n                    value={state.name || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            name: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Address\">\n                <Input\n                    value={state.address || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            address: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Contact\">\n                <Input\n                    value={state.contact || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            contact: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Description\">\n                <Textarea\n                    width=\"20em\"\n                    value={state.description || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            description: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Email\">\n                <Input\n                    value={state.email || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            email: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Link\">\n                <Input\n                    value={state.link || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            link: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Region\">\n                <Input\n                    value={state.region || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            region: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n            <LabeledInput label=\"Specials\">\n                <Input\n                    value={state.specials || ''}\n                    onChange={e =>\n                        setState({\n                            ...state,\n                            specials: e.target.value,\n                        })\n                    }\n                />\n            </LabeledInput>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport gql from 'graphql-tag'\nimport { ClubEditorState, ClubEditor } from '../components/ClubEditor'\nimport { Page } from '../components/Page'\nimport { Content } from '../components/Content'\nimport { useMutation } from '@apollo/react-hooks'\nimport { useHistory } from 'react-router'\nimport { Button } from '../components/Button'\nimport { H1Title } from '../components/H1Title'\nimport { Spacer } from '../components/Spacer'\n\nconst CREATE_CLUB_MUTATION = gql`\n    mutation CreateClub($input: CreateClubInput!) {\n        createClub(input: $input) {\n            club {\n                id\n            }\n        }\n    }\n`\n\nexport function AdminAddClubPage() {\n    const [clubEditorState, setClubEditorState] = useState<ClubEditorState>({})\n    const canCreate = Boolean(clubEditorState.name)\n    const [createClubMutation] = useMutation(CREATE_CLUB_MUTATION, {\n        variables: {\n            input: {\n                address: clubEditorState.address,\n                contact: clubEditorState.contact,\n                description: clubEditorState.description,\n                email: clubEditorState.email,\n                link: clubEditorState.link,\n                name: clubEditorState.name,\n                region: clubEditorState.region,\n                specials: clubEditorState.specials\n            }\n        }\n    })\n    const history = useHistory()\n\n    async function createClub() {\n        const createClubMutationResult = await createClubMutation()\n        const clubId = createClubMutationResult.data.createClub.club.id\n        history.push(`/club/${clubId}`)\n    }\n\n    return (\n        <Page>\n            <Content restrictMaxWidth scrollable>\n                <H1Title>Create Club</H1Title>\n                <ClubEditor\n                    state={clubEditorState}\n                    setState={setClubEditorState}\n                />\n                <Spacer />\n                <Button primary disabled={!canCreate} onClick={createClub}>\n                    Create\n                </Button>\n                <Button secondary onClick={() => history.push('/admin')}>\n                    Cancel\n                </Button>\n                <Spacer />\n            </Content>\n        </Page>\n    )\n}\n","import gql from 'graphql-tag'\nimport { Club } from '../api'\nimport { useQuery } from '@apollo/react-hooks'\n\nexport const CLUB_WITH_DETAILS_QUERY = gql`\n    query ClubWithDetails($id: Int!) {\n        club(id: $id) {\n            address\n            contact\n            description\n            email\n            id\n            link\n            name\n            region\n            specials\n        }\n    }\n`\ntype QueryResult = {\n    club: Pick<\n        Club,\n        | 'address'\n        | 'contact'\n        | 'description'\n        | 'email'\n        | 'id'\n        | 'link'\n        | 'name'\n        | 'region'\n        | 'specials'\n    >\n}\n\nexport function useClubWithDetails(clubId: number) {\n    const clubQueryResult = useQuery<QueryResult>(CLUB_WITH_DETAILS_QUERY, {\n        variables: { id: clubId }\n    })\n    const club = clubQueryResult.data && clubQueryResult.data.club\n    return [club, clubQueryResult] as const\n}\n","import React, { useState, useEffect } from 'react'\nimport gql from 'graphql-tag'\nimport { ClubEditorState, ClubEditor } from '../components/ClubEditor'\nimport { useMutation } from '@apollo/react-hooks'\nimport { useHistory, useParams } from 'react-router'\nimport { Page } from '../components/Page'\nimport { Content } from '../components/Content'\nimport { useClubWithDetails } from '../containers/useClubWithDetails'\nimport { Button } from '../components/Button'\nimport { H1Title } from '../components/H1Title'\nimport { Spacer } from '../components/Spacer'\n\ntype Params = {\n    clubId: string\n}\n\nconst UPDATE_CLUB_MUTATION = gql`\n    mutation UpdateClub($input: UpdateClubInput!) {\n        updateClub(input: $input) {\n            club {\n                id\n            }\n        }\n    }\n`\n\nexport function AdminUpdateClubPage() {\n    const { clubId } = useParams<Params>()\n    const [club] = useClubWithDetails(parseInt(clubId, 10))\n    const [clubEditorState, setClubEditorState] = useState<ClubEditorState>({})\n    useEffect(() => {\n        if (!club) return\n        setClubEditorState(club)\n    }, [club])\n    const canSave = Boolean(clubEditorState.name && clubEditorState.id)\n    const [updateClubMutation] = useMutation(UPDATE_CLUB_MUTATION, {\n        variables: {\n            input: {\n                address: clubEditorState.address,\n                contact: clubEditorState.contact,\n                description: clubEditorState.description,\n                email: clubEditorState.email,\n                id: parseInt(clubId),\n                link: clubEditorState.link,\n                name: clubEditorState.name,\n                region: clubEditorState.region,\n                specials: clubEditorState.specials\n            }\n        }\n    })\n    const history = useHistory()\n\n    async function updateClub() {\n        const createClubMutationResult = await updateClubMutation()\n        const clubId = createClubMutationResult.data.updateClub.club.id\n        history.push(`/club/${clubId}`)\n    }\n\n    return (\n        <Page>\n            <Content restrictMaxWidth scrollable>\n                <H1Title>Edit Club</H1Title>\n                <ClubEditor\n                    state={clubEditorState}\n                    setState={setClubEditorState}\n                />\n                <Spacer />\n                <Button primary disabled={!canSave} onClick={updateClub}>\n                    Save\n                </Button>\n                <Button secondary onClick={() => history.push('/admin')}>\n                    Cancel\n                </Button>\n                <Spacer />\n            </Content>\n        </Page>\n    )\n}\n","import React from 'react';\nimport { Button } from '../components/Button';\nimport './ComponentLibrary.scss'\nimport { Input } from '../components/Input';\nimport { Select } from '../components/Select';\nimport { Option } from '../components/Option';\n\n// TODO: should probably not be available in production\n\nconst cn = 'component-library'\n\nexport function ComponentLibraryPage() {\n    return <div>\n        <div className={`${cn}__spacer`}>\n            <Button primary>\n                Primary\n            </Button>\n        </div>\n        <div className={`${cn}__spacer`}>\n            <Button secondary>\n                Secondary\n            </Button>\n        </div>\n        <div className={`${cn}__spacer`}>\n            <Button danger>\n                Danger\n            </Button>\n        </div>\n        <div className={`${cn}__spacer`}>\n            <Input />\n        </div>\n        <div className={`${cn}__spacer`}>\n            <Select>\n                <Option>1</Option>\n                <Option>2</Option>\n            </Select>\n            </div>\n    </div>\n}","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { EventDetailPage } from './pages/EventDetailPage';\nimport { ImpressumPage } from './pages/ImpressumPage';\nimport { DataPolicyPage } from './pages/DataPolicyPage';\nimport { ContactPage } from './pages/Contact';\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { apolloClient } from './api';\nimport { ClubDetailPage } from './pages/ClubDetailPage';\nimport { AdminPage } from './pages/AdminPage';\nimport { AdminAddEventPage } from './pages/AdminAddEventPage';\nimport { AdminUpdateEventPage } from './pages/AdminUpdateEventPage';\nimport { AdminAddClubPage } from './pages/AdminAddClubPage';\nimport { AdminUpdateClubPage } from './pages/AdminUpdateClubPage';\nimport { ComponentLibraryPage } from './pages/ComponentLibrary';\n\nconst App: React.FC = () => {\n  return (\n    <ApolloProvider client={apolloClient}>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/component-library\">\n            <ComponentLibraryPage />\n          </Route>\n          <Route exact path=\"/admin\">\n            <AdminPage />\n          </Route>\n          <Route path=\"/admin/add-event\">\n            <AdminAddEventPage />\n          </Route>\n          <Route path=\"/admin/event/:eventId\">\n            <AdminUpdateEventPage />\n          </Route>\n          <Route path=\"/admin/add-club\">\n            <AdminAddClubPage />\n          </Route>\n          <Route path=\"/admin/club/:clubId\">\n            <AdminUpdateClubPage />\n          </Route>\n          <Route path=\"/impressum\">\n            <ImpressumPage />\n          </Route>\n          <Route path=\"/data-policy\">\n            <DataPolicyPage />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactPage />\n          </Route>\n          <Route path=\"/event/:eventId\">\n            <EventDetailPage />\n          </Route>\n          <Route path=\"/club/:clubId\">\n            <ClubDetailPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}